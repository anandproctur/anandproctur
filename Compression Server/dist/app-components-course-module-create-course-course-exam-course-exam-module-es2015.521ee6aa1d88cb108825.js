(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{"2QUe":function(e,t,s){"use strict";s.r(t),t.default="/* ===============================header colors=======================*/\n.table-format-first .table-responsive table th,\n.table-format-first .table-responsive table td {\n  text-align: center;\n  padding: 10px 5px;\n}\n.table-format-first .table-responsive table th {\n  text-transform: capitalize;\n  font-size: 14px;\n}\n.table-format-first .table-responsive table tbody tr td .field-checkbox-wrapper {\n  display: inline-block;\n  overflow: initial;\n  margin-left: 0;\n  width: auto;\n  position: relative;\n  background: transparent;\n}\n.table-format-first .table-responsive table tbody tr td .field-checkbox-wrapper .form-checkbox {\n  z-index: 2;\n}\n.table-format-first .table-responsive table tbody tr td .field-checkbox-wrapper .form-checkbox + label {\n  font-size: 16px;\n  margin-left: 7px;\n  font-weight: 600;\n  vertical-align: middle;\n}\n.table-format-first .table-responsive table tbody tr td .field-checkbox-wrapper .form-checkbox + label:after, .table-format-first .table-responsive table tbody tr td .field-checkbox-wrapper .form-checkbox + label:before {\n  z-index: 1;\n}\n.table-format-first .table-responsive table tbody tr td .field-checkbox-wrapper:after {\n  content: '';\n  width: 20px;\n  height: 20px;\n  background: #fff;\n  left: 0;\n  top: 0;\n  position: absolute;\n}\n.table-format-first .table-responsive table tbody tr td .fa-trash-o {\n  color: #f44336;\n  font-size: 20px;\n}\n.table-container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-top: 10px;\n}\n.table-container .heading-container {\n  background: #e0eaec;\n  display: flex;\n  flex-direction: row;\n  font-size: 14px;\n  font-weight: 600;\n  text-align: left;\n  padding: 10px;\n  border: 1px solid #ccc;\n  display: -webkit-box;\n  -webkit-box-align: center;\n}\n.table-container .heading-container .heading-item {\n  width: 10%;\n  text-align: center;\n}\n.table-container .value-outer-container {\n  display: flex;\n  flex-direction: column;\n  min-height: 53vh;\n  max-height: 54vh;\n  overflow-x: hidden;\n  overflow-y: auto;\n  border: 1px solid #ccc;\n}\n.table-container .value-outer-container .value-container {\n  display: flex;\n  flex-direction: row;\n  text-align: left;\n  padding: 4px;\n  font-size: 12px;\n  border-bottom: 1px solid #ccc;\n  display: -webkit-box;\n  -webkit-box-align: center;\n  border-top: none;\n}\n.table-container .value-outer-container .value-container .value-item {\n  width: 10%;\n  text-align: center;\n}\n.middle-section {\n  padding: 10px 10px;\n}\n.btn {\n  background: #0084f6;\n  color: white;\n}\n.langModelCss .examAdder .btnAdd {\n  margin-top: 20px;\n}\n.langModelCss .row {\n  margin-top: 10px;\n}\n.langModelCss .btn-Group {\n  margin-right: 5px;\n  margin-bottom: 5px;\n}\n.langModelCss .cancelClass-table {\n  margin-top: 5px;\n}\n.langModelCss h3 {\n  margin-top: 10px;\n  margin-left: 0px;\n}\n.common-search-filter {\n  border-bottom: 1px solid #d3d4d5;\n  padding: 5px 5px 10px 5px;\n}\n.common-search-filter .field-wrapper {\n  background: transparent;\n}\n.common-search-filter .field-wrapper .form-ctrl {\n  border-radius: 4px;\n}\n.common-search-filter .batchTimeDet {\n  margin-top: 5px;\n}\n.content-section {\n  margin: 5px 0px;\n}\n.content-section .action-Menu {\n  cursor: pointer;\n}\n.content-section .action-Menu span {\n  margin-right: 5px;\n}\n.constantHeight {\n  height: 30px;\n}\n.form-wrapper {\n  background: transparent;\n}\n.form-wrapper.datepicker span {\n  position: absolute;\n  top: 35px;\n  right: 20px;\n  font-weight: 600;\n  font-size: 16px;\n  color: red;\n  cursor: pointer;\n  width: 20px;\n  text-align: center;\n  /* &::before {\r\n                content: '';\r\n                background: url('/assets/images/calendar.svg') no-repeat;\r\n                position: absolute;\r\n                right: 25px;\r\n                top: 0px;\r\n                width: 21px;\r\n                height: 21px;\r\n                z-index: 0;\r\n            } */\n}\n.form-wrapper label {\n  font-size: 12px;\n  color: rgba(0, 0, 0, 0.77);\n  padding-bottom: 2px;\n  text-decoration: none;\n  -webkit-font-smoothing: antialiased;\n  font-weight: 600;\n}\n.form-wrapper .side-form-ctrl {\n  background: white;\n  border: 1px solid rgba(119, 119, 119, 0.419608);\n  width: 100%;\n  padding: 8px 5px;\n  border-radius: 4px;\n  font-size: 14px;\n  color: black;\n}\n.form-wrapper .side-form-ctrl.bsDatepicker {\n  padding: 5px;\n  width: 100%;\n}\n.form-wrapper.timepick {\n  padding: 1px 0px;\n}\n.form-wrapper.timepick .tbox {\n  display: inline-block;\n}\n.form-wrapper.timepick .tbox .times {\n  display: inline-block;\n}\n.form-wrapper.timepick .tbox .side-form-ctrl {\n  background: white;\n  border: 1px solid rgba(119, 119, 119, 0.419608);\n  width: 100%;\n  padding: 4px 5px;\n  font-size: 14px;\n  border-radius: 4px;\n  color: black;\n}\n.form-wrapper.timepick .tbox .side-form-ctrl.mins {\n  width: auto;\n}\n.form-wrapper.timepick .tbox .side-form-ctrl.mers {\n  width: 50px;\n}\n.save_btn_container {\n  position: absolute;\n  bottom: 0px;\n  right: 0px;\n  width: 85%;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  background: white;\n}\n.field-wrapper.datePickerBox:after {\n  content: '';\n  background: url(/./assets/images/calendar.svg) no-repeat;\n  position: absolute;\n  right: 5px;\n  top: 28px;\n  width: 21px;\n  height: 21px;\n  z-index: 0;\n}\n.attendanceWrapperCourse {\n  border-top: 2px solid #eee;\n  margin-top: 15px;\n  max-height: 480px;\n  overflow: hidden;\n}\n.attendanceWrapperCourse .filterSection {\n  padding: 20px 0px 10px 0px !important;\n  margin: 0px !important;\n  background-color: #efefef;\n}\n.attendanceWrapperCourse .filterSection span {\n  padding: 4px 12px;\n  margin-left: 4px;\n}\n.attendanceWrapperCourse .filterSection h5 {\n  margin-left: 4px;\n  display: inline-block;\n  font-weight: 200;\n  font-size: 13px;\n}\n.attendanceWrapperCourse .filterSection .absent {\n  color: white;\n  background: #fe552a;\n  border-radius: 5px;\n}\n.attendanceWrapperCourse .filterSection .present {\n  color: white;\n  background: #4191da;\n  border-radius: 5px;\n}\n.attendanceWrapperCourse .filterSection .leave {\n  color: white;\n  background: #7a7a7a;\n  border-radius: 5px;\n}\n.attendanceWrapperCourse .attendanceMain .table-scroll-wrapper {\n  max-height: 375px;\n  overflow: auto;\n}\n.attendanceWrapperCourse .attendanceMain ::-webkit-scrollbar {\n  display: block;\n}\n.attendanceWrapperCourse tr td {\n  padding: 0px 20px !important;\n}\n.attendanceWrapperCourse .form-wrapper .form-ctrl {\n  border: 2px solid #efefef;\n}\n.btnGroup {\n  display: inline-flex;\n  margin-bottom: 4px !important;\n}\n.btnGroup .btn {\n  padding: 0px 8px 0px 8px;\n  margin: 0px 5px;\n  width: 29%;\n  height: 22px;\n  font-size: 14px;\n  border-radius: 6px;\n}\n.btnGroup .classLeaveBtn {\n  color: white;\n  text-align: center;\n  background: #7a7a7a;\n}\n.btnGroup .classAbsentBtn {\n  color: white;\n  text-align: center;\n  background: #fe552a;\n}\n.btnGroup .classPresentBtn {\n  color: white;\n  background: #4191da;\n  color: white;\n  text-align: center;\n}\n@media only screen and (max-width: 767px) {\n  .attendanceWrapper {\n    border-top: 2px solid #eee;\n    margin-top: 15px;\n    max-height: 420px;\n    overflow: hidden;\n  }\n  .attendanceWrapper .row {\n    display: flex;\n  }\n  .attendanceWrapper .row .tableSection {\n    display: inline-block;\n    width: 100%;\n    padding: 10px;\n    background: #fff;\n  }\n  .attendanceWrapper .row .tableSection .button-row {\n    position: relative;\n    height: 45px;\n    padding: 0px 10px;\n  }\n  .attendanceWrapper .row .tableSection .button-row button {\n    position: absolute;\n    right: 10px;\n    border: 2px solid #0084f6;\n  }\n  .attendanceWrapper .row .tableSection .filterSection {\n    padding: 20px 0px 10px 0px !important;\n    margin: 0px !important;\n    background-color: #efefef;\n  }\n  .attendanceWrapper .row .tableSection .filterSection span {\n    padding: 4px 12px;\n  }\n  .attendanceWrapper .row .tableSection .filterSection .absent {\n    color: white;\n    background: #fe552a;\n    border-radius: 5px;\n  }\n  .attendanceWrapper .row .tableSection .filterSection .present {\n    color: white;\n    background: #4191da;\n    border-radius: 5px;\n  }\n  .attendanceWrapper .row .tableSection .filterSection .leave {\n    color: white;\n    background: #7a7a7a;\n    border-radius: 5px;\n  }\n  .attendanceWrapper .row .tableSection .studentTableWrapper {\n    width: 100%;\n  }\n  .attendanceWrapper .row .tableSection .studentTableWrapper .schedule-bottom {\n    width: 100%;\n  }\n  .attendanceWrapper .row .tableSection .studentTableWrapper .schedule-bottom ul {\n    border-left: 2px solid rgba(211, 212, 213, 0.5);\n    border-right: 2px solid rgba(211, 212, 213, 0.5);\n  }\n  .attendanceWrapper .row .tableSection .row {\n    margin-left: 10px;\n  }\n}\n.torlMarksWidth {\n  width: 50px !important;\n}\n/* popUp Scss */\n::ng-deep .k-checkbox {\n  width: 16px;\n  height: 16px;\n}\n.popupWrapper {\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  bottom: 0;\n  top: 0px;\n  right: 0;\n  left: 0px;\n  background: rgba(230, 230, 230, 0.5);\n  z-index: 100;\n  visibility: hidden;\n  opacity: 0;\n  transition: all 0.5s ease-in;\n}\n.popupWrapper .popup {\n  max-width: 40%;\n  width: 100%;\n  height: auto;\n  left: 0;\n  right: 0;\n  top: 10%;\n  bottom: 0;\n  margin: auto;\n}\n.popup-wrapper {\n  padding: 20px 20px;\n  box-sizing: border-box;\n  box-shadow: 1px 8px 20px 5px #9c9c9c;\n  transition: unset;\n  background: #fff;\n  border-radius: 6px;\n}\n.popup-wrapper h2 {\n  margin-bottom: 15px;\n  font-size: 14px;\n}\n.popup-wrapper h4 {\n  margin: 25px 0 15px;\n  font-weight: 600;\n}\n.closePopup {\n  right: 10px;\n  top: 10px;\n  font-size: 18px;\n  cursor: pointer;\n  line-height: 20px;\n  width: 26px;\n  height: 26px;\n  box-sizing: border-box;\n  text-align: center;\n  padding-top: 3px;\n  display: none;\n}\n.closePopup.bottomRight {\n  bottom: 2px;\n  top: auto;\n  left: auto;\n  right: 0;\n}\n.closePopup.topLeft {\n  left: 0;\n  right: auto;\n  top: 1px;\n  bottom: auto;\n}\n.closePopup.bottomLeft {\n  left: 0;\n  right: auto;\n  bottom: 2px;\n  top: auto;\n}\n.closePopup svg {\n  width: 16px;\n}\n.closePopup svg .cls-1 {\n  stroke: #c1c1c1;\n  stroke-width: 2px;\n}\n.closePopup:hover .cls-1 {\n  stroke: #0084f6;\n}\n.popup-content {\n  height: 100%;\n  overflow: hidden;\n  visibility: visible;\n}\n.fadeIn {\n  opacity: 1;\n  visibility: visible;\n}\n.popupWrapperMob {\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  bottom: 0;\n  top: 0;\n  right: 0;\n  left: 0;\n  z-index: 100;\n  background: rgba(0, 0, 0, 0.5);\n  visibility: hidden;\n  transition: all 0.5s ease-in;\n}\n.popupWrapperMob .closePopup {\n  right: -25px;\n  top: -27px;\n  display: block;\n}\n.popup-mob {\n  left: 0;\n  width: 100%;\n  max-height: 70%;\n  background: #fff;\n  padding: 30px;\n  box-sizing: border-box;\n  height: 100%;\n  overflow: auto;\n  z-index: 1;\n  bottom: -70%;\n  transition: all 0.5s ease-in;\n}\n.popupWrapperMob.showPopupMob {\n  z-index: 100;\n  visibility: visible;\n  opacity: 1;\n}\n.popupWrapperMob.showPopupMob .popup-mob {\n  bottom: 0;\n}\n.spanText {\n  font-size: 12px;\n}\ninput[type=number]::-webkit-inner-spin-button,\ninput[type=number]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n.courseModelWrapper {\n  margin-bottom: 35px;\n}\n.courseModelWrapper .row {\n  margin: 5px 0px;\n}\n.courseModelWrapper table thead tr th {\n  padding: 5px 0px !important;\n}\n.subjectName {\n  width: 185px !important;\n  padding: 0px 0px !important;\n}\n.exam_adder_div {\n  margin-top: 10px;\n  margin-bottom: 10px;\n  border-spacing: 0px 2px;\n  box-shadow: 0px 3px 6px #696969;\n}\n.exam_adder_div .dateInfo, .exam_adder_div .basic-detail {\n  padding: 6px;\n}\n.exam_adder_div .dateInfo {\n  margin-bottom: 0px;\n}\n.exam_adder_div .basic-detail {\n  margin-top: 0px;\n}\n.exam_adder_div .topic-link {\n  cursor: pointer;\n  border: 1px solid #cccccc;\n}\n.exam_adder_div .topic-linked {\n  cursor: pointer;\n  border: 1px solid #1283f4;\n}\n.exam_adder_div .topic-linked::-moz-placeholder {\n  color: #1283f4;\n}\n.exam_adder_div .topic-linked:-ms-input-placeholder {\n  color: #1283f4;\n}\n.exam_adder_div .topic-linked::placeholder {\n  color: #1283f4;\n}\n.topic-link {\n  cursor: pointer;\n  border: 1px solid #cccccc;\n}\n.topic-link::-moz-placeholder {\n  color: #cccccc;\n}\n.topic-link:-ms-input-placeholder {\n  color: #cccccc;\n}\n.topic-link::placeholder {\n  color: #cccccc;\n}\n.topic-linked {\n  cursor: pointer;\n  border: 1px solid #1283f4 !important;\n}\n.topic-linked::-moz-placeholder {\n  color: #1283f4;\n}\n.topic-linked:-ms-input-placeholder {\n  color: #1283f4;\n}\n.topic-linked::placeholder {\n  color: #1283f4;\n}\n.topictext {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  max-width: 12%;\n}\n.displayComp .edit-comp {\n  display: none;\n}\n.editComp .view-comp {\n  display: none;\n}\n.black-bg {\n  background: rgba(10, 10, 10, 0.3);\n  position: fixed;\n  top: 0px;\n  height: 100%;\n  left: 0px;\n  z-index: 1;\n  width: 100%;\n}\n.topicBox {\n  position: fixed;\n  top: 20%;\n  left: 20%;\n  right: 20%;\n  width: 60%;\n  z-index: 100;\n  background: #f7f5f5;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16);\n  border-radius: 4px;\n}\n.close-btn {\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  font-size: 16px;\n  font-weight: 600;\n}\n.close-btn span {\n  cursor: pointer;\n}\n.header-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  padding: 10px;\n  margin-top: 20px;\n  border-bottom: 1px solid rgba(10, 10, 10, 0.7);\n}\n.sub-header {\n  width: 30%;\n}\n.total-topic {\n  width: 20%;\n  margin-left: 10%;\n}\n.topic-listing-container {\n  overflow-y: scroll;\n  max-height: 270px;\n}\n.tooltip {\n  position: relative;\n  display: inline-block;\n  border-bottom: 1px dotted black;\n  /* If you want dots under the hoverable text */\n}\n/* Tooltip text */\n.tooltip .tooltiptext {\n  visibility: hidden;\n  width: 120px;\n  background-color: black;\n  color: #fff;\n  text-align: center;\n  padding: 5px 0;\n  border-radius: 6px;\n  /* Position the tooltip text - see examples below! */\n  position: absolute;\n  z-index: 1;\n}\n/* Show the tooltip text when you mouse over the tooltip container */\n.tooltip:hover .tooltiptext {\n  visibility: visible;\n}\n.k-treeview .k-in.k-state-selected {\n  background-color: transparent;\n  color: #656565;\n}\n.k-treeview .k-in.k-state-selected {\n  background-color: white;\n  color: #656565;\n}\n.k-checkbox:indeterminate + .k-checkbox-label::after {\n  background-color: #0084f6;\n}\n.k-checkbox:checked + .k-checkbox-label::before {\n  border-color: #0084f6;\n  background-color: #0084f6;\n}\n.k-treeview .k-content, .k-treeview > .k-group, .k-treeview .k-item > .k-group {\n  padding: 10px;\n}\n.k-checkbox:indeterminate + .k-checkbox-label::after {\n  background-color: #0084f6;\n}\n.k-checkbox:indeterminate + .k-checkbox-label::after {\n  content: \"\";\n  transform: scale(1);\n  width: 8px;\n  height: 8px;\n  top: 4px;\n  left: 4px;\n}\n.loopingDiv {\n  margin-top: 10px;\n  margin-bottom: 10px;\n  border-spacing: 0px 2px;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16);\n}\n.loopingDiv .dateInfo, .loopingDiv .basic-detail {\n  background: #f9f9f9;\n  padding: 6px;\n}\n.loopingDiv .dateInfo {\n  margin-bottom: 0px;\n}\n.loopingDiv .basic-detail {\n  margin-top: 0px;\n}\n.small-btn {\n  height: auto !important;\n  padding: 0.4em 0.8em !important;\n  border-radius: 0.2em !important;\n}\n.action_btn {\n  background: white;\n  color: #3d89f0;\n  border-radius: 4px;\n}\n.add_exam_btn {\n  background: #3d89f0;\n  color: white;\n  border-radius: 4px;\n}\n.mail-notification {\n  width: 20px;\n  height: 20px;\n  background: url('mial_notification.svg') no-repeat;\n  cursor: pointer;\n  display: inline-block;\n}\n.form-wrapper.datePickerBox:after {\n  content: '';\n  background: url(/./assets/images/calendar.svg) no-repeat;\n  position: absolute;\n  right: 18px;\n  top: 28px;\n  width: 21px;\n  height: 21px;\n  z-index: 0;\n}\n.black-bg {\n  background: rgba(12, 11, 11, 0.3);\n  position: fixed;\n  top: 0px;\n  height: 100%;\n  left: 0px;\n  z-index: 6;\n  width: 100%;\n}\n.topic-container {\n  margin-right: 0 !important;\n  margin-left: 0 !important;\n  display: flex;\n  flex-direction: row;\n}\n.arrow-icon {\n  padding: 0 5px;\n}\n.level1Topic {\n  padding-top: 4px;\n  padding-bottom: 2px;\n}\n.subTopicLevel {\n  padding-top: 8px;\n}\n"},FIwe:function(e,t,s){"use strict";s.r(t),t.default='<section class="middle-section">\r\n    <section class="exam-schedule">\r\n        <div class="heading-section">\r\n            \x3c!-- <h1>\r\n                Exam Schedule Details\r\n            </h1> --\x3e\r\n        </div>\r\n\r\n        <div class="common-search-filter">\r\n            <div *ngIf="isLangInstitute">\r\n                <div class="row">\r\n                    <div class="c-sm-3 c-md-3 c-lg-3">\r\n                        <div class="field-wrapper" [ngClass]="{\'has-value\': batchData.standard_id != \'-1\'}">\r\n                            <label for="ddnMAsterCourse">Category/Course<span class="text-danger">*</span></label>\r\n                            <select id="ddnMAsterCourse" name="ddnMAsterCourse" class="form-ctrl"\r\n                                [(ngModel)]="batchData.standard_id"\r\n                                (ngModelChange)="onBatchMasterCourseSelection($event)">\r\n                                <option value="-1">Select Category/Course</option>\r\n                                <option [value]="master.standard_id" *ngFor="let  master of masterCourseList">\r\n                                    {{master.standard_name}}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class="c-sm-3 c-md-3 c-lg-3">\r\n                        <div class="field-wrapper" [ngClass]="{\'has-value\': batchData.subject_id != \'-1\'}">\r\n                            <label for="ddnMAsterCourse">Batch<span class="text-danger">*</span></label>\r\n                            <select id="ddnMAsterCourse" name="ddnMAsterCourse" class="form-ctrl"\r\n                                [(ngModel)]="batchData.subject_id" (ngModelChange)="onBatchCourseSelection($event)">\r\n                                <option value="-1">Select Batch</option>\r\n                                <option [value]="master.subject_id" *ngFor="let  master of courseList">\r\n                                    {{master.subject_name}}\r\n                                </option>\r\n                            </select>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class="c-sm-3 c-md-3 c-lg-3">\r\n                        <div class="field-wrapper" [ngClass]="{\'has-value\': batchData.batch_id != \'-1\'}">\r\n                            <label for="sc">Batch<span class="text-danger">*</span></label>\r\n                            <select id="sc" class="form-ctrl" [(ngModel)]="batchData.batch_id">\r\n                                <option value="-1">Select Batch</option>\r\n                                <option [value]="subject.batch_id" *ngFor="let subject of batchesList">\r\n                                    {{subject.batch_name}}\r\n                                </option>\r\n                            </select>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class="c-sm-3 c-md-3 c-lg-3" style="margin-top: 25px">\r\n                        <button class="btn fullBlue" (click)="batchModelGoClick()">Go</button>\r\n                    </div>\r\n                </div>\r\n                <div class="row" *ngIf="showCourseStartEndDate">\r\n                    <div class="c-sm-6 c-md-6 c-lg-6">\r\n                        <span class="spanText">Batch Start Date : {{batchStartDate | date: \'dd-MMM-yyyy\'}}</span>\r\n                        &emsp;\r\n                        <span class="spanText">Batch End Date : {{batchEndDate | date: \'dd-MMM-yyyy\'}} </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div *ngIf="!isLangInstitute">\r\n\r\n                <div class="row" style="margin-top: -50px;">\r\n\r\n                    <div class="c-sm-3 c-md-3 c-lg-3">\r\n                        <div class="field-wrapper" [ngClass]="{\'has-value\': courseData.master_course != \'\'}">\r\n                            \x3c!-- changes by Nalini - to handle school model conditions --\x3e\r\n                            <label for="ddnMAsterCourse">{{schoolModel ? \'Standard\' : \'Category/Course\'}}\r\n                                <span class="text-danger">*</span>\r\n                            </label>\r\n                            <select id="ddnMAsterCourse" name="ddnMAsterCourse" class="form-ctrl"\r\n                                [(ngModel)]="courseData.master_course" (ngModelChange)="getCourseList(event)">\r\n                                <option value="-1">Select {{schoolModel ? \'Standard\' : \'Category/Course\'}}</option>\r\n                                <option [value]="master" *ngFor="let  master of masterCourseList">\r\n                                    {{master}}\r\n                                </option>\r\n                            </select>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="c-sm-3 c-md-3 c-lg-3">\r\n                        <div class="field-wrapper" [ngClass]="{\'has-value\': courseData.course_id != -1}">\r\n                            <label for="ddnMAsterCourse">{{schoolModel ? \'Section\' : \'Batch\'}}\r\n                                <span class="text-danger">*</span>\r\n                            </label>\r\n                            <select id="ddnMAsterCourse" name="ddnMAsterCourse" class="form-ctrl"\r\n                                [(ngModel)]="courseData.course_id" (ngModelChange)="displayCourseDate()">\r\n                                <option value="-1">Select {{schoolModel ? \'Section\' : \'Batch\'}}</option>\r\n                                <option [value]="master.course_id" *ngFor="let  master of courseList">\r\n                                    {{master.course_name}}\r\n                                </option>\r\n                            </select>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="c-sm-3 c-md-3 c-lg-3">\r\n\r\n                        <div class="field-wrapper datePickerBox has-value">\r\n                            <label for="reqDate">Exam Schedule Date\r\n                                <span class="text-danger">*</span>\r\n                            </label>\r\n                            <input type="text" value="" id="reqDate" class="form-ctrl bsDatepicker"\r\n                                [(ngModel)]="courseData.requested_date" readonly="true" name="reqDate" bsDatepicker\r\n                                style="z-index: 1;">\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class="c-sm-3 c-md-3 c-lg-3" style="margin-top: 25px">\r\n                        <button class="btn fullBlue" (click)="getExamSchedule()">Go</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="row" *ngIf="showCourseStartEndDate" style="margin-top: 5px;">\r\n                    <div class="c-sm-6 c-md-6 c-lg-6">\r\n                        <span class="spanText">Batch Start Date : <span\r\n                                style="font-weight: 600;">{{batchStartDate | date: \'dd-MMM-yyyy\'}}</span></span>\r\n                        &emsp;\r\n                        <span class="spanText">Batch End Date : <span\r\n                                style="font-weight: 600;">{{batchEndDate | date: \'dd-MMM-yyyy\'}}</span></span>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class="content-section" *ngIf="showContentSection">\r\n\r\n\r\n            <div *ngIf="isLangInstitute" class="langModelCss">\r\n\r\n                <div class="row">\r\n\r\n                    <div class="c-sm-6 c-md-6 c-lg-6">\r\n                        <span class="spanText">{{batchStartDate}} to {{batchEndDate}}</span>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div class="row examAdder" *ngIf="jsonVar.isSheduleBatch">\r\n\r\n                    <div class="c-lg-2 c-md-2 c-sm-2 ">\r\n                        <div class="form-wrapper datePickerBox">\r\n                            <label for="csd">Date\r\n                                <span class="text-danger">*</span>\r\n                            </label>\r\n                            <input type="text" value="" id="csd" class="side-form-ctrl bsDatepicker constantHeight"\r\n                                [(ngModel)]="batchAdderData.exam_date" readonly="true" name="csd" bsDatepicker>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="c-lg-1 c-md-1 c-sm-1" style="padding: 0;">\r\n                        <div class="form-wrapper topicsBox">\r\n                            <label>\r\n                                <span>Topic</span>\r\n                            </label><br>\r\n                            <input type="text" class="side-form-ctrl text-center" *ngIf="!selectedTopicsListObj.length"\r\n                                (click)="fetchTopics()" style="height: 30px;cursor:pointer" value=""\r\n                                placeholder="Link" />\r\n                            <i class="fa fa-link" (click)="fetchTopics()" *ngIf="!selectedTopicsListObj.length"\r\n                                style="position: absolute;  top: 28px; right: 10px;cursor: pointer"></i>\r\n\r\n                            \x3c!--when topics are not linked--\x3e\r\n                            <input type="text" class="side-form-ctrl text-center" *ngIf="selectedTopicsListObj.length"\r\n                                (click)="fetchSelectedTopics()" style="height: 30px;cursor:pointer;    border-color: blue;\r\n                            color: blue;" value="" placeholder="Linked" />\r\n                            <i class="fa fa-link" (click)="fetchSelectedTopics()" *ngIf="selectedTopicsListObj.length"\r\n                                style="position: absolute;  top: 28px; right: 10px;cursor: pointer;color:blue"></i>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="c-sm-2 c-lg-2 c-md-2">\r\n\r\n                        <div class="form-wrapper timepick">\r\n                            <label for="startTime">Start Time</label><br>\r\n                            <div class="tbox">\r\n                                <div class="times">\r\n                                    <select id="" class="mins side-form-ctrl constantHeight"\r\n                                        [(ngModel)]="batchAdderData.start_time.hour" name="startTime">\r\n                                        <option [value]="time" *ngFor="let time of times">\r\n                                            {{time}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="times">\r\n                                    <select id="" class="mers side-form-ctrl constantHeight"\r\n                                        [(ngModel)]="batchAdderData.start_time.minute" name="minute">\r\n                                        <option *ngFor="let minute of minArr" [value]="minute">\r\n                                            {{minute}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class="c-sm-2 c-lg-2 c-md-2">\r\n\r\n                        <div class="form-wrapper timepick">\r\n                            <label for="startTime">End Time</label><br>\r\n                            <div class="tbox">\r\n                                <div class="times">\r\n                                    <select id="" class="mins side-form-ctrl constantHeight"\r\n                                        [(ngModel)]="batchAdderData.end_time.hour" name="startTime">\r\n                                        <option [value]="time" *ngFor="let time of times">\r\n                                            {{time}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="times">\r\n                                    <select id="" class="mers side-form-ctrl constantHeight"\r\n                                        [(ngModel)]="batchAdderData.end_time.minute" name="minute">\r\n                                        <option *ngFor="let minute of minArr" [value]="minute">\r\n                                            {{minute}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class="c-sm-2 c-lg-2 c-md-2">\r\n                        <div class="form-wrapper">\r\n                            <label for="customDescTxt">Description</label>\r\n                            <textarea class="side-form-ctrl constantHeight" [(ngModel)]="batchAdderData.exam_desc"\r\n                                id="customDescTxt" name="customDescTxt" placeholder="Enter Exam Description"></textarea>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="c-sm-2 c-lg-2 c-md-2" *ngIf="examScheduleData.is_exam_grad_feature == 0">\r\n                        <div class="form-wrapper" style="width: 75px">\r\n                            <label for="inpTotalMarks">Total Marks</label>\r\n                            <input type="text" onkeypress="return (event.charCode >= 48 && event.charCode <= 57)"\r\n                                class="side-form-ctrl constantHeight" [(ngModel)]="batchAdderData.total_marks">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="btnAdd">\r\n                        <i class="fas fa-plus-circle"\r\n                            style="font-family: FontAwesome;font-size: 25px;color: #0083f6;cursor: pointer;"\r\n                            (click)="addNewExamSchedule()"></i>\r\n                        \x3c!-- <button class="btn fullBlue">Add</button> --\x3e\r\n                    </div>\r\n\r\n                </div>\r\n                <div class="row text-center" style="color: red; margin-bottom: 10px;font-weight: 600;"\r\n                    *ngIf="!jsonVar.isSheduleBatch">\r\n                    You are not allowed to schedule Class/Exam as current Batch is expired !!!!!!\r\n                </div>\r\n                <div class="table-wrapper-Lang">\r\n                    <div class="">\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        Date\r\n                                    </th>\r\n                                    <th>\r\n                                        Topics\r\n                                    </th>\r\n                                    <th>\r\n                                        Start Time\r\n                                    </th>\r\n                                    <th>\r\n                                        End Time\r\n                                    </th>\r\n                                    <th *ngIf="examScheduleData.is_exam_grad_feature == 0">\r\n                                        Total Marks\r\n                                    </th>\r\n                                    <th>\r\n                                        Description\r\n                                    </th>\r\n                                    <th *ngIf="jsonVar.isSheduleBatch">\r\n                                        Action\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor="let row of examSchedule ; let i= index ; trackBy : index">\r\n                                    <td>\r\n                                        {{row.exam_date | dateMonthYear}}\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="textbox" class="side-form-ctrl topic-link"\r\n                                            *ngIf="row.topics_covered != \'\' && row.topics_covered != null" name="label"\r\n                                            style="height: 30px;border:1px solid blue;text-align:center;cursor:pointer"\r\n                                            id="classDetailsTxt9" placeholder="Linked" readonly\r\n                                            (click)="editTopics(row)" />\r\n                                        <i class="fa fa-link" (click)="editTopics(row)"\r\n                                            *ngIf="row.topics_covered != \'\' && row.topics_covered != null"\r\n                                            style="cursor: pointer;font-size: 15px;margin-left: -30px;margin-top:6px;color:#0084f6"></i>\r\n\r\n                                        <input type="textbox" class="side-form-ctrl topic-link"\r\n                                            *ngIf="row.topics_covered == \'\' || row.topics_covered == null" name="label"\r\n                                            style="height: 30px;cursor:pointer;text-align:center;border:1px solid lightgrey"\r\n                                            id="classDetailsTxt9" placeholder="Link" readonly\r\n                                            (click)="editTopics(row)" />\r\n                                        <i class="fa fa-link" (click)="editTopics(row)"\r\n                                            *ngIf="row.topics_covered == \'\' || row.topics_covered == null"\r\n                                            style="cursor: pointer;color: #bdbdbd;font-size: 15px;margin-left: -30px;margin-top:6px"></i>\r\n                                    </td>\r\n                                    <td>\r\n                                        {{row.start_time}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{row.end_time}}\r\n                                    </td>\r\n                                    <td *ngIf="examScheduleData.is_exam_grad_feature == 0">\r\n                                        <div class="form-wrapper">\r\n                                            <input type="text"\r\n                                                onkeypress="return (event.charCode >= 48 && event.charCode <= 57)"\r\n                                                class="side-form-ctrl torlMarksWidth" name="label"\r\n                                                [(ngModel)]="row.total_marks">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class="form-wrapper">\r\n                                            <input type="textbox" class="side-form-ctrl" name="label"\r\n                                                [(ngModel)]="row.exam_desc">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td *ngIf="jsonVar.isSheduleBatch">\r\n\r\n                                        <div class="action-box">\r\n                                            <span class="mail-notification"\r\n                                                *ngIf="row.schd_id != 0 && (currentDate <= row.exam_date)"\r\n                                                (click)="notifyExamSchedule(row)" title="Notify">\r\n                                            </span>\r\n                                            <span class="delete-btn" style="font-family: FontAwesome;font-size: 20px"\r\n                                                *ngIf="row.schd_id == 0 || (currentDate < row.exam_date)"\r\n                                                (click)="deleteExamSchedule(row,i)" title="Delete">\r\n                                                <i class="fa fa-trash-o " aria-hidden="true "></i>\r\n                                            </span>\r\n                                            \x3c!-- <span *ngIf="row.schd_id != 0" (click)="markAttendanceSchedule(row)" title="Mark Attendance">\r\n                                                <img src="../../../../assets/images/attendance.png" width="20px" height="20px" style="position: relative;top: 2px;">\r\n                                            </span> --\x3e\r\n                                            <span *ngIf="row.schd_id != 0 && (currentDate <= row.exam_date)"\r\n                                                (click)="cancelExamSchedule(row)" title="Cancel Exam">\r\n                                                <i class="fa fa-times"\r\n                                                    style="font-family: FontAwesome;font-size: 20px; position: relative;top: -1px"\r\n                                                    aria-hidden="true"></i>\r\n                                            </span>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr *ngIf="examSchedule.length == 0">\r\n                                    <td colspan="6">\r\n                                        No Schedule OF Exam\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="row btn-Group">\r\n                    <div class="pull-left" style="margin-left: 7%">\r\n                        <button type="button" class="btn" Style="margin-left: 0px;" name="button"\r\n                            routerLink="/view/course/coursePlanner/exam"\r\n                            *ngIf="coursePlannerStatus==\'true\'">Back</button>\r\n                    </div>\r\n                    <button class="btn fullBlue pull-right" *ngIf="examSchedule.length > 0"\r\n                        [disabled]="auth.isRippleLoad.getValue()" (click)="addDataToExamSchedule()">Create Exam\r\n                        Schedule</button>\r\n                    \x3c!-- <button class="btn fullBlue pull-right" *ngIf="examScheduleData.otherSchd.length !=0" (click)="addDataToExamSchedule()">Update</button> --\x3e\r\n                </div>\r\n\r\n                <h3 class="row">Cancelled Exams</h3>\r\n\r\n                <div class="cancelClass-table">\r\n                    <div class="">\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Date</th>\r\n                                    <th>Start Time</th>\r\n                                    <th>End Time</th>\r\n                                    <th *ngIf="examScheduleData.is_exam_grad_feature == 0">Total Marks</th>\r\n                                    <th>Cancel Reason</th>\r\n                                    <th *ngIf="jsonVar.isSheduleBatch">Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor="let row of cancelledSchedule ; let i= index ; trackBy : index">\r\n                                    <td>\r\n                                        {{row.exam_date}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{row.start_time}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{row.end_time}}\r\n                                    </td>\r\n                                    <td *ngIf="examScheduleData.is_exam_grad_feature == 0">\r\n                                        {{row.total_marks}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{row.exam_desc}}\r\n                                    </td>\r\n                                    <td *ngIf="jsonVar.isSheduleBatch">\r\n                                        <div class="action-Menu">\r\n\r\n                                            <div class="action-box">\r\n                                                <span class="mail-notification"\r\n                                                    title="Send notification for cancelled exam schedule"\r\n                                                    (click)="notifyCancelClass(row)">\r\n                                                </span>\r\n                                                <span class="delete-btn"\r\n                                                    style="font-family: FontAwesome;font-size: 20px"\r\n                                                    title="Uncancel Schedule" *ngIf="(currentDate < row.exam_date)"\r\n                                                    (click)="unCancelClass(row)">\r\n                                                    <i class="fa fa-trash-o " aria-hidden="true "></i>\r\n                                                </span>\r\n                                            </div>\r\n\r\n                                            \x3c!-- <a title="Send notification for cancelled exam schedule" (click)="notifyCancelClass(row)">Notify</a>\r\n                                            <a title="Uncancel Schedule" *ngIf="(currentDate < row.exam_date)" (click)="unCancelClass(row)">Uncancel Class</a> --\x3e\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr *ngIf="cancelledSchedule.length ==0">\r\n                                    <td colspan="6">\r\n                                        No Cancelled Schedule\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div *ngIf="!isLangInstitute" class="courseModelWrapper">\r\n\r\n                \x3c!-- <div class="row spli-Btn"> --\x3e\r\n\r\n                \x3c!-- <p-selectButton [options]="types" [(ngModel)]="selectedType" (onChange)="onChanged($event)"></p-selectButton> --\x3e\r\n\r\n                \x3c!-- <div class="pull-right" *ngIf="selectedType == \'course\' && examScheduleData.coursesList[0].courseClassSchdList" style="margin-right:10px;">\r\n                        <button class="btn fullBlue small-btn add_exam_btn" (click)="addMoreSchedule()" title="Used to create an additional/ multiple exams in same course on same day but with different timings.">+ Add Exam</button>\r\n                    </div> --\x3e\r\n\r\n                \x3c!-- </div> --\x3e\r\n\r\n                <div class="row course-model" *ngIf="selectedType == \'course\'">\r\n\r\n                    \x3c!-- Add new Exam HTML --\x3e\r\n\r\n                    <div class="exam_adder_div">\r\n\r\n                        <div class="row dateInfo">\r\n\r\n                            <div class="c-sm-3 c-lg-3 c-md-3">\r\n\r\n                                <div class="form-wrapper timepick">\r\n                                    <label for="startTime">Start Time</label>\r\n                                    <div class="tbox">\r\n                                        <div class="times">\r\n                                            <select id="" class="mins side-form-ctrl constantHeight"\r\n                                                [(ngModel)]="newExamData.startTimeHrs" name="startTime">\r\n                                                <option [value]="time" *ngFor="let time of times">\r\n                                                    {{time}}\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div class="times">\r\n                                            <select id="" class="mers side-form-ctrl constantHeight"\r\n                                                [(ngModel)]="newExamData.startTimeMins" name="minute">\r\n                                                <option *ngFor="let minute of minArr" [value]="minute">\r\n                                                    {{minute}}\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div class="c-sm-3 c-lg-3 c-md-3">\r\n\r\n                                <div class="form-wrapper timepick">\r\n                                    <label for="startTime">End Time</label>\r\n                                    <div class="tbox">\r\n                                        <div class="times">\r\n                                            <select id="" class="mins side-form-ctrl constantHeight"\r\n                                                [(ngModel)]="newExamData.endTimeHrs" name="startTime">\r\n                                                <option [value]="time" *ngFor="let time of times">\r\n                                                    {{time}}\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div class="times">\r\n                                            <select id="" class="mers side-form-ctrl constantHeight"\r\n                                                [(ngModel)]="newExamData.endTimeMins" name="minute">\r\n                                                <option *ngFor="let minute of minArr" [value]="minute">\r\n                                                    {{minute}}\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div class="pull-right" style="margin-right:10px;">\r\n                                <button (click)="clearField()" class="btn">Clear</button>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class="row basic-detail">\r\n\r\n                            <div class="c-sm-2 c-lg-2 c-md-2">\r\n                                <div class="form-wrapper">\r\n                                    <label for="subject">Subject\r\n                                        <span class="text-danger">*</span>\r\n                                    </label>\r\n                                    <select id="subject" class="side-form-ctrl constantHeight subjectName"\r\n                                        [(ngModel)]="subject_id" (ngModelChange)="subjectChanged()">\r\n                                        <option value="-1" selected="selected">Select Subject</option>\r\n                                        <option [value]="time.subject_id" *ngFor="let time of subjectListData[0]">\r\n                                            {{time.is_optional_subject?time.subject_name+\'(Optional)\':time.subject_name}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class="c-sm-2 c-lg-2 c-md-2" *ngIf="schoolModel">\r\n                                <div class="form-wrapper">\r\n                                    <label for="examType">Exam Type\r\n                                        <span class="text-danger">*</span>\r\n                                    </label>\r\n                                    <select id="examType" class="side-form-ctrl constantHeight subjectName"\r\n                                        [(ngModel)]="selectedExamTypeId" >\r\n                                        <option value="-1" selected="selected">Select Exam Type</option>\r\n                                        <option [value]="list.exam_type_id+\',\'+list.exam_type" *ngFor="let list of examTypeList">\r\n                                            {{list.exam_type}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class="c-sm-1 c-lg-1 c-md-1">\r\n                                <div class="form-wrapper" style="width: 75px">\r\n                                    <label for="marks">Marks\r\n                                        <span class="text-danger">*</span>\r\n                                    </label>\r\n                                    <input type="number" class="side-form-ctrl constantHeight" style="width:90px;"\r\n                                        (ngModelChange)="checkNgetiveValue($event)" [(ngModel)]="exam_marks" id="marks">\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class="c-sm-2 c-lg-2 c-md-2" *ngIf="!schoolModel">\r\n                                <div class="form-wrapper">\r\n                                    <label for="topics">Topic</label>\r\n                                    <input type="textbox" class="side-form-ctrl constantHeight" name="label"\r\n                                        style="height: 31px;" id="classDetailsTxt9" placeholder="Link Topic" readonly\r\n                                        (click)="topicListing()"\r\n                                        [ngClass]="topicsName.length > 0 && subject_id != \'\' ? \'topic-linked\' : \'topic-link\'">\r\n                                    <i class="fa fa-link" aria-hidden="true" (click)="topicListing()"\r\n                                        style="cursor: pointer;color: #bdbdbd;font-size: 15px;position: absolute; top: 28px; right: 25px;"></i>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class="c-sm-2 c-lg-2 c-md-2">\r\n                                <div class="form-wrapper">\r\n                                    <label for="customDescTxt">Description</label>\r\n                                    <textarea class="side-form-ctrl constantHeight" [(ngModel)]="exam_desc"\r\n                                        id="customDescTxt" name="customDescTxt"\r\n                                        placeholder="Enter Exam Description"></textarea>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class="c-sm-2 c-lg-2 c-md-2">\r\n                                <div class="form-wrapper" style="width: 75px">\r\n                                    <label for="inpTotalMarks">Room No</label>\r\n                                    <input type="string" class="side-form-ctrl constantHeight"\r\n                                        [(ngModel)]="exam_room_no" id="inpTotalMarks">\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class="c-sm-2 c-lg-2 c-md-2 pull-right" style="margin-top: 15px;">\r\n                                <button type="button" name="button" (click)="addNewExamSubject()"\r\n                                    class="btn  small-btn action_btn pull-right">Add Subject &nbsp;<i\r\n                                        class="fas fa-plus-circle"\r\n                                        style="font-family: FontAwesome;font-size: 14px;color: #0083f6;cursor: pointer;"></i></button>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div class="row displayComp"\r\n                            *ngFor="let row of newExamSubjectData; let i= index ; trackBy : index"\r\n                            style="padding:0px 6px;" id="row{{i}}">\r\n\r\n                            <div class="c-sm-2 c-lg-2 c-md-2">\r\n                                <span class="view-comp">{{row.is_optional_subject?row.subject_name+\'(Optional)\':row.subject_name}}</span>\r\n                                <span class="edit-comp">{{row.is_optional_subject?row.subject_name+\'(Optional)\':row.subject_name}}</span>\r\n                                \x3c!-- <div class="form-wrapper edit-comp">\r\n                            <select id="subject" class="side-form-ctrl constantHeight subjectName" [(ngModel)]="edit_subject_id">\r\n                                <option value="-1" selected="selected">Select Subject</option>\r\n                                <option [value]="time.subject_id" *ngFor="let time of subjectListData[0]">\r\n                                    {{time.subject_name}}\r\n                                </option>\r\n                            </select>\r\n                          </div> --\x3e\r\n                            </div>\r\n                            <div class="c-sm-2 c-lg-2 c-md-2" *ngIf="schoolModel">\r\n                                <span class="view-comp">{{row.exam_type}}</span>\r\n                                <span class="edit-comp">{{row.exam_type}}</span>\r\n                                \x3c!-- <div class="form-wrapper edit-comp">\r\n                            <select id="subject" class="side-form-ctrl constantHeight subjectName" [(ngModel)]="edit_subject_id">\r\n                                <option value="-1" selected="selected">Select Subject</option>\r\n                                <option [value]="time.subject_id" *ngFor="let time of subjectListData[0]">\r\n                                    {{time.subject_name}}\r\n                                </option>\r\n                            </select>\r\n                          </div> --\x3e\r\n                            </div>\r\n\r\n                            <div class="c-sm-2 c-lg-2 c-md-2">\r\n                                <span class="view-comp">{{row.exam_marks}} marks</span>\r\n                                <div class="form-wrapper edit-comp">\r\n                                    <input type="number" class="side-form-ctrl constantHeight" style="width:90px;"\r\n                                        [(ngModel)]="edit_exam_marks">\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class="c-sm-2 c-lg-2 c-md-2 topictext" *ngIf="!schoolModel">\r\n                                <span class="view-comp"\r\n                                    title={{row.subject_topics}}>{{row.subject_topics | slice:0:20}}</span>\r\n                                <div class="form-wrapper edit-comp">\r\n                                    <input type="textbox" class="side-form-ctrl constantHeight" name="label"\r\n                                        style="height: 31px;" id="classDetailsTxt9" placeholder="Link Topic" readonly\r\n                                        (click)="preSelectedTopicListing()"\r\n                                        [ngClass]="row.subject_topics ? \'topic-linked\' : \'topic-link\'">\r\n                                    <i class="fa fa-link" aria-hidden="true" (click)="preSelectedTopicListing()"\r\n                                        style="cursor: pointer;color: #bdbdbd;font-size: 15px;position: absolute; top: 10px; right: 25px;"></i>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div class="c-sm-2 c-lg-2 c-md-2">\r\n                                <span class="view-comp">{{row.exam_desc}}</span>\r\n                                <div class="form-wrapper edit-comp">\r\n                                    <textarea class="side-form-ctrl constantHeight" [(ngModel)]="edit_exam_desc"\r\n                                        id="customDescTxt" name="customDescTxt"\r\n                                        placeholder="Enter Exam Description"></textarea>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class="c-sm-2 c-lg-2 c-md-2">\r\n                                <span class="view-comp">{{row.exam_room_no}}</span>\r\n                                <div class="form-wrapper edit-comp">\r\n                                    <input type="string" class="side-form-ctrl constantHeight"\r\n                                        [(ngModel)]="edit_exam_room_no">\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class="c-sm-2 c-lg-2 c-md-2 pull-right">\r\n                                <div class="action-Menu view-comp" *ngIf="row.isReferenced != \'Y\'">\r\n                                    <i class="fa fa-trash-o pull-right" style="color:red;margin: 0px 10px;"\r\n                                        aria-hidden="true" (click)="deleteSubject(row.subject_id)" title="Delete"></i>\r\n                                    <i class="fa fa-pencil pull-right" style="color:#1283f4;margin: 0px 10px;"\r\n                                        aria-hidden="true" (click)="editSubject(i , row)" title="Edit"></i>\r\n                                </div>\r\n                                <div class="action-Menu edit-comp" *ngIf="row.isReferenced != \'Y\'">\r\n                                    <i class="fa fa-trash-o pull-right" style="color:red;margin: 0px 10px;"\r\n                                        aria-hidden="true" (click)="deleteSubject(row.subject_id)" title="Delete"></i>\r\n                                    \x3c!-- <i class="fa fa-pencil pull-right" style="color:#1283f4;margin: 0px 10px;" aria-hidden="true" (click)="editSubject(i , row)" title="Edit"></i> --\x3e\r\n                                    <span style="color:#1283f4;margin: 0px 10px;" class="pull-right"\r\n                                        (click)="updateSubject(i , row)">Save</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class="row" style="padding: 6px; border-top: 1px solid rgba(119, 119, 119, 0.419608);"\r\n                            *ngIf="newExamSubjectData.length > 0">\r\n                            <div class="c-sm-2 c-lg-2 c-md-2">\r\n                                <span style="font-weight: 600;">Total Marks</span>\r\n                            </div>\r\n\r\n                            <div class="c-sm-2 c-lg-2 c-md-2">\r\n                                <span class="view-comp" style="font-weight: 600;">{{total_marks_to_show}} marks</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    \x3c!-- Showing Already Scheduled Exam List with their edit option --\x3e\r\n                    <div class="" *ngIf="viewList?.length">\r\n                        <div class="loopingDiv" *ngFor="let data of viewList;let j= index ; trackBy : index">\r\n\r\n                            <div class="row dateInfo" *ngIf="data.courseTableList.length > 0">\r\n\r\n                                <div class="c-sm-3 c-lg-3 c-md-3">\r\n\r\n                                    <div class="form-wrapper timepick">\r\n                                        <label for="startTime">Exam Start Time</label>\r\n                                        <div class="tbox">\r\n                                            <div class="times">\r\n                                                <select id="" class="mins side-form-ctrl constantHeight"\r\n                                                    [(ngModel)]="data.courseModelAdder.start_time.hour"\r\n                                                    name="startTime">\r\n                                                    <option [value]="time" *ngFor="let time of times">\r\n                                                        {{time}}\r\n                                                    </option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div class="times">\r\n                                                <select id="" class="mers side-form-ctrl constantHeight"\r\n                                                    [(ngModel)]="data.courseModelAdder.start_time.minute" name="minute">\r\n                                                    <option *ngFor="let minute of minArr" [value]="minute">\r\n                                                        {{minute}}\r\n                                                    </option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div class="c-sm-3 c-lg-3 c-md-3">\r\n\r\n                                    <div class="form-wrapper timepick">\r\n                                        <label for="startTime">Exam End Time</label>\r\n                                        <div class="tbox">\r\n                                            <div class="times">\r\n                                                <select id="" class="mins side-form-ctrl constantHeight"\r\n                                                    [(ngModel)]="data.courseModelAdder.end_time.hour" name="startTime">\r\n                                                    <option [value]="time" *ngFor="let time of times">\r\n                                                        {{time}}\r\n                                                    </option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div class="times">\r\n                                                <select id="" class="mers side-form-ctrl constantHeight"\r\n                                                    [(ngModel)]="data.courseModelAdder.end_time.minute" name="minute">\r\n                                                    <option *ngFor="let minute of minArr" [value]="minute">\r\n                                                        {{minute}}\r\n                                                    </option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div class="pull-right" style="margin-right:10px;">\r\n                                    <button *ngIf="data.selectedCourseList.course_exam_schedule_id == -1"\r\n                                        (click)="deleteWholeCourse(data, j)"\r\n                                        class="btn fullBlue small-btn">Delete</button>\r\n                                    <button (click)="cancelExamForFullCourse(data,j)"\r\n                                        class="btn  small-btn action_btn">Cancel Exam</button>\r\n                                    <button (click)="sendReminderForCourse(data,j)"\r\n                                        class="btn  small-btn action_btn">Notify</button>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n                            <div class="row basic-detail" *ngIf="data.courseTableList.length > 0">\r\n\r\n                                <div class="c-sm-2 c-lg-2 c-md-2">\r\n                                    <div class="form-wrapper">\r\n                                        <label for="subject">Subject\r\n                                            <span class="text-danger">*</span>\r\n                                        </label>\r\n                                        <select id="subject" class="side-form-ctrl constantHeight subjectName"\r\n                                            [(ngModel)]="data.coursetableAdder.batch_id" name="startTime"\r\n                                            (ngModelChange)="subjectChanged()">\r\n                                            <option value="-1">Select Subject</option>\r\n                                            <option [value]="time.batch_id" *ngFor="let time of data.subjectList">\r\n                                                {{time.is_optional_subject?time.subject_name+\'(Optional)\':time.subject_name}}\r\n                                            </option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="c-sm-2 c-lg-2 c-md-2" *ngIf="schoolModel">\r\n                                    <div class="form-wrapper">\r\n                                        <label for="examType">Exam Type\r\n                                            <span class="text-danger">*</span>\r\n                                        </label>\r\n                                        <select id="examType" class="side-form-ctrl constantHeight subjectName"\r\n                                            [(ngModel)]="selectedExamTypeId" (ngModelChange)="subjectChanged()">\r\n                                            <option value="-1" selected="selected">Select Exam Type</option>\r\n                                            <option [value]="list.exam_type_id" *ngFor="let list of examTypeList">\r\n                                                {{list.exam_type}}\r\n                                            </option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div class="c-sm-1 c-lg-1 c-md-1"\r\n                                    *ngIf="(data.selectedCourseList.is_exam_grad_feature == 0)">\r\n                                    <div class="form-wrapper" style="width: 75px">\r\n                                        <label for="marks">Marks\r\n                                            <span class="text-danger">*</span>\r\n                                        </label>\r\n                                        <input type="number" class="side-form-ctrl constantHeight" style="width:90px;"\r\n                                            (ngModelChange)="checkNgetiveValue($event)"\r\n                                            [(ngModel)]="data.coursetableAdder.total_marks" id="marks">\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class="c-sm-2 c-lg-2 c-md-2" *ngIf="!schoolModel">\r\n                                    <div class="form-wrapper">\r\n                                        <label for="topics">Topic</label>\r\n                                        <input type="textbox" class="side-form-ctrl constantHeight" name="label"\r\n                                            style="height: 31px;" id="classDetailsTxt9" placeholder="Link Topic"\r\n                                            readonly (click)="topicLinking(data.subjectList, j)"\r\n                                            [ngClass]="changeColor ? \'topic-linked\' : \'topic-link\'">\r\n                                        \x3c!----   [ngClass]="checkedKeys.length > 0 ? \'topic-linked\' : \'topic-link\'"   -----\x3e\r\n                                        <i class="fa fa-link" aria-hidden="true"\r\n                                            (click)="topicLinking(data.subjectList, j)"\r\n                                            style="cursor: pointer;color: #bdbdbd;font-size: 15px;position: absolute; top: 28px; right: 25px;"></i>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                \x3c!-- <div class="c-sm-2 c-lg-2 c-md-2" *ngIf="(data.selectedCourseList.is_exam_grad_feature == 0)">\r\n                                <div class="form-wrapper" style="width: 70px">\r\n                                    <label for="inpTotalMarks">Total Marks</label>\r\n                                    <input type="number" class="side-form-ctrl constantHeight" [(ngModel)]="data.courseModelAdder.total_marks">\r\n                                </div>\r\n                            </div> --\x3e\r\n\r\n                                <div class="c-sm-2 c-lg-2 c-md-2">\r\n                                    <div class="form-wrapper">\r\n                                        <label for="customDescTxt">Description</label>\r\n                                        <textarea class="side-form-ctrl constantHeight"\r\n                                            [(ngModel)]="data.coursetableAdder.exam_desc" id="customDescTxt"\r\n                                            name="customDescTxt" placeholder="Enter Exam Description"></textarea>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class="c-sm-2 c-lg-2 c-md-2">\r\n                                    <div class="form-wrapper" style="width: 75px">\r\n                                        <label for="inpTotalMarks">Room No</label>\r\n                                        <input type="string" class="side-form-ctrl constantHeight"\r\n                                            [(ngModel)]="data.coursetableAdder.room_no" id="inpTotalMarks">\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class="c-sm-2 c-lg-2 c-md-2 pull-right" style="margin-top: 15px;">\r\n                                    <button type="button" name="button" (click)="addNewExamSubjectCourse(j)"\r\n                                        class="btn  small-btn action_btn pull-right">Add Subject &nbsp;<i\r\n                                            class="fas fa-plus-circle"\r\n                                            style="font-family: FontAwesome;font-size: 14px;color: #0083f6;cursor: pointer;"></i></button>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n                            <div class="row displayComp"\r\n                                *ngFor="let row of data.courseTableList; let i= index ; trackBy : index"\r\n                                id="row_already{{i}}_{{j}}" style="padding:0px 6px;">\r\n                                <div class="c-sm-2 c-lg-2 c-md-2">\r\n                                    <span class="view-comp">{{row.is_optional_subject?row.subject_name+\'(Optional)\':row.subject_name}}</span>\r\n                                    <span class="edit-comp">{{row.is_optional_subject?row.subject_name+\'(Optional)\':row.subject_name}}</span>\r\n                                    \x3c!-- <div class="form-wrapper edit-comp">\r\n                              <select id="subject" class="side-form-ctrl constantHeight subjectName" [(ngModel)]="edit_subject_id">\r\n                                  <option value="-1" selected="selected">Select Subject</option>\r\n                                  <option [value]="time.subject_id" *ngFor="let time of subjectListData[0]">\r\n                                      {{time.subject_name}}\r\n                                  </option>\r\n                              </select>\r\n                            </div> --\x3e\r\n                                </div>\r\n                                <div class="c-sm-2 c-lg-2 c-md-2" *ngIf="schoolModel">\r\n                                    <span class="view-comp">{{row.exam_type}}</span>\r\n                                    <span class="edit-comp">{{row.exam_type}}</span>\r\n                                </div>\r\n\r\n                                <div class="c-sm-2 c-lg-2 c-md-2">\r\n                                    <span class="view-comp">{{row.total_marks}} marks</span>\r\n                                    <div class="form-wrapper edit-comp">\r\n                                        <input type="number" class="side-form-ctrl constantHeight" style="width:90px;"\r\n                                            [(ngModel)]="row_edit_exam_marks">\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class="c-sm-2 c-lg-2 c-md-2 topictext" *ngIf="!schoolModel">\r\n                                    <span class="view-comp "\r\n                                        title={{row.topicName}}>{{row.topicName | slice:0:20}}</span>\r\n                                    <div class="form-wrapper edit-comp">\r\n                                        <input type="textbox" class="side-form-ctrl constantHeight" name="label"\r\n                                            style="height: 31px;" id="classDetailsTxt9" placeholder="Link Topic"\r\n                                            readonly (click)="topicLinkingForPreSelectedTopics(data.subjectList)"\r\n                                            [ngClass]="row_edit_subject_topicId != \'\' && row_edit_subject_topicId != undefined ? \'topic-linked\' : \'topic-link\'">\r\n                                        <i class="fa fa-link" aria-hidden="true"\r\n                                            (click)="topicLinkingForPreSelectedTopics(data.subjectList)"\r\n                                            style="cursor: pointer;color: #bdbdbd;font-size: 15px;position: absolute; top: 10px; right: 25px;"></i>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div class="c-sm-2 c-lg-2 c-md-2">\r\n                                    <span class="view-comp">{{row.class_desc}}</span>\r\n                                    <div class="form-wrapper edit-comp">\r\n                                        <textarea class="side-form-ctrl constantHeight" [(ngModel)]="row_edit_exam_desc"\r\n                                            id="customDescTxt" name="customDescTxt"\r\n                                            placeholder="Enter Exam Description"></textarea>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class="c-sm-2 c-lg-2 c-md-2">\r\n                                    <span class="view-comp">{{row.room_no}}</span>\r\n                                    <div class="form-wrapper edit-comp">\r\n                                        <input type="string" class="side-form-ctrl constantHeight"\r\n                                            [(ngModel)]="row_edit_exam_room_no">\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div class="c-sm-2 c-lg-2 c-md-2 pull-right">\r\n                                    <div class="action-Menu view-comp" *ngIf="row.isReferenced != \'Y\'">\r\n                                        <i class="fa fa-trash-o pull-right" style="color:red;margin: 0px 10px;"\r\n                                            aria-hidden="true" (click)="deleteFromCourse(row , i , j)" title="Delete"\r\n                                            *ngIf="row.is_attendance_marked!=\'Y\'"></i>\r\n                                        <i class="fa fa-pencil pull-right" style="color:#1283f4;margin: 0px 10px;"\r\n                                            aria-hidden="true" (click)="editFromCourse(row , i , j)" title="Edit"\r\n                                            *ngIf="row.is_attendance_marked!=\'Y\'"></i>\r\n                                    </div>\r\n                                    <div class="action-Menu edit-comp" *ngIf="row.isReferenced != \'Y\'">\r\n                                        <i class="fa fa-trash-o pull-right" style="color:red;margin: 0px 10px;"\r\n                                            aria-hidden="true" (click)="deleteFromCourse(row.subject_id)" title="Delete"\r\n                                            *ngIf="row.is_attendance_marked!=\'Y\'"></i>\r\n                                        \x3c!-- <i class="fa fa-pencil pull-right" style="color:#1283f4;margin: 0px 10px;" aria-hidden="true" (click)="editSubject(i , row)" title="Edit"></i> --\x3e\r\n                                        <span style="color:#1283f4;margin: 0px 10px;" class="pull-right"\r\n                                            (click)="updateEditedSubject(row , i , j)"\r\n                                            *ngIf="row.is_attendance_marked!=\'Y\'">Save</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div class="row" style="padding: 6px; border-top: 1px solid rgba(119, 119, 119, 0.419608);"\r\n                                *ngIf="data.courseTableList.length > 0">\r\n                                <div class="c-sm-2 c-lg-2 c-md-2">\r\n                                    <span style="font-weight: 600;">Total Marks</span>\r\n                                </div>\r\n\r\n                                <div class="c-sm-2 c-lg-2 c-md-2">\r\n                                    <span class="view-comp"\r\n                                        style="font-weight: 600;">{{data.courseModelAdder.total_marks}} marks</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class="row" style="padding-right:25px;" class="save_btn_container">\r\n                        <div class="pull-left" style="margin-left: 11%">\r\n                            <button type="button" class="btn" Style="margin-left: 0px;" name="button"\r\n                                routerLink="/view/course/coursePlanner/exam"\r\n                                *ngIf="coursePlannerStatus==\'true\'">Back</button>\r\n                        </div>\r\n                        <div class="pull-right">\r\n                            <button class="btn" (click)="saveExamScheduleCourse()"\r\n                                [disabled]="multiClickDisabled">Save</button>\r\n                            <button type="button" name="button" class="btn">Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n\r\n</section>\r\n\r\n\x3c!-- ///////// POPUP/////////////////////////////////// --\x3e\r\n\x3c!-- ///////// POPUP/////////////////////////////////// --\x3e\r\n\x3c!-- ///////// POPUP/////////////////////////////////// --\x3e\r\n\r\n<section [hidden]="topicBox">\r\n    <div class="topicBox">\r\n        <div class="close-btn">\r\n            <span (click)="closeAlert()">X</span>\r\n        </div>\r\n        <div class="header-container">\r\n            <div class="sub-header">\r\n                <span style="font-weight: 600;">Subject : </span>\r\n                <span id="topicSubName">{{subject_name}}</span>\r\n            </div>\r\n            <div class="total-topic">\r\n                <span style="font-weight: 600;">Total Topic : </span>\r\n                <span id="topicCount">{{topicsData?.length}}</span>\r\n            </div>\r\n        </div>\r\n        <div class="field-checkbox-wrapper" style="margin:10px;">\r\n      <input type="checkbox" name="checkbx" id="select_all_topics" [(ngModel)]="selectAllTopics" (ngModelChange)="checkAllTopics()"\r\n        class="form-checkbox">\r\n      <label for="select_all_topics">\r\n        Select All\r\n      </label>\r\n    </div>\r\n        <div class="topic-listing-container">\r\n            <kendo-treeview [nodes]="topicsData" [hasChildren]="hasChildren" [children]="children"\r\n                kendoTreeViewSelectable kendoTreeViewHierarchyBinding kendoTreeViewExpandable textField="topicName"\r\n                [kendoTreeViewCheckable]="checkableSettings" [(checkedKeys)]="checkedKeys" checkBy="topicId"\r\n                (checkedChange)="handleChecking($event)">\r\n            </kendo-treeview>\r\n        </div>\r\n        \x3c!-- <div class="example-config">\r\n           Checked keys: {{checkedKeys.join("|")}}\r\n       </div> --\x3e\r\n        <div class="extraMargin row  pull-right" style="margin: 15px">\r\n            <button class="btn" (click)="saveTopic()">Save</button>\r\n            <button class="btn" (click)="closeAlert()">Cancel</button>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section *ngIf="showTopicsPopUp">\r\n    <div class="topicBox">\r\n        <div class="close-btn">\r\n            <span (click)="closeTopicModal()">X</span>\r\n        </div>\r\n        <div class="header-container">\r\n            <div class="sub-header">\r\n                <span style="font-weight: 600;">Subject : </span>\r\n                <span id="topicSubName">{{selectedCourseName}}</span>\r\n            </div>\r\n\r\n        </div>\r\n        <div class="topic-listing-container" style="overflow-x: hidden;">\r\n            <ng-container *ngTemplateOutlet="topicsRecursiveList; context:{$implicit: topicsList, level: 1 }">\r\n            </ng-container>\r\n        </div>\r\n        <div class="extraMargin row  pull-right" style="margin: 15px">\r\n            <button class="btn " *ngIf="showTopicsPopUp && !showExamEditModal"\r\n                (click)="saveSelectedTopics()">Save</button>\r\n            <button class="btn " *ngIf="showExamEditModal" (click)="linkTopics()">Save</button>\r\n            <button class="btn" (click)="closeTopicModal()">Cancel</button>\r\n\r\n        </div>\r\n    </div>\r\n</section>\r\n<ng-template #topicsRecursiveList let-topicsList let-level="level">\r\n    <div style="margin:2px !important" *ngFor="let topic of topicsList">\r\n        <div class="topic-container" [ngClass]="level == 1 ? \'level1Topic\': \'subTopicLevel\'">\r\n            <div class="arrow-icon" [style.visibility]="topic.subTopic.length ? \'visible\':\'hidden\'"\r\n                (click)="toggleArrow(topic)">\r\n                <i [ngClass]="topic.isExpand ? \'fa fa-caret-down\': \'fa fa-caret-right\'"\r\n                    style="font-size: 15px!important;"></i>\r\n            </div>\r\n            <div class="field-checkbox-wrapper" style="margin-bottom: 5px !important;padding-left:0px !important">\r\n                <input type="checkbox" [(ngModel)]="topic.checked" class="form-checkbox" value="{{topic.checked}}"\r\n                    (click)="selectTopics(topic,$event)" id="topic-{{topic.topicId}}" />\r\n                <label for="topic-{{topic.topicId}}" style="margin-left:25px !important">{{topic.topicName}}</label>\r\n                <div *ngIf="topic.isExpand">\r\n                    <ng-container\r\n                        *ngTemplateOutlet="topicsRecursiveList; context:{ $implicit: topic.subTopic, level: level + 1  }">\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n<div class="black-bg" id="black-bg" [hidden]="topicBox" (click)="closeAlert()">\r\n\r\n</div>\r\n<div class="black-bg" id="black-bg" [hidden]="!showTopicsPopUp">\r\n\r\n</div>\r\n\r\n\x3c!-- ///////// POPUP/////////////////////////////////// --\x3e\r\n\x3c!-- ///////// POPUP/////////////////////////////////// --\x3e\r\n\x3c!-- ///////// POPUP/////////////////////////////////// --\x3e\r\n\r\n<section id="popup " class="popupWrapper fadeIn " *ngIf="markAttendancePopUp">\r\n    <div class="popup pos-abs popup-body-container ">\r\n        <div class="popup-wrapper pos-rel ">\r\n            <span class="closePopup pos-abs fbold show " id="popupCloseBtn " (click)="closeCourseLevelAttendance()">\r\n                <svg xmlns="http://www.w3.org/2000/svg " viewBox="9310 2185 16 16 ">\r\n                    <g id="Group_1228 " data-name="Group 1228 " transform="translate(8298 1888) ">\r\n                        <g id="Group_1213 " data-name="Group 1213 " transform="translate(34.189 -7.77) ">\r\n                            <line id="Line_274 " data-name="Line 274 " class="cls-1 " y2="19.798 " transform="translate(992.81 305.77)\r\n                      rotate(45) " />\r\n                            <line id="Line_275 " data-name="Line 275 " class="cls-1 " x1="19.798 " transform="translate(978.81 305.77)\r\n                      rotate(45) " />\r\n                        </g>\r\n                        <rect id="Rectangle_686 " data-name="Rectangle 686 " style="stroke:none; " class="cls-2 " width="16\r\n                      " height="16 " transform="translate(1012 297) " />\r\n                    </g>\r\n                </svg>\r\n            </span>\r\n            <div class="popup-content">\r\n                <h2>Mark/Update Exam Attendance</h2>\r\n\r\n                <div class="attendanceWrapperCourse">\r\n\r\n                    <div class="row attendance-Note">\r\n                        <div class="c-sm-6 c-md-6 c-lg-6">\r\n                            <div class="form-wrapper">\r\n                                <label for="attedNote">Exam Description</label>\r\n                                <textarea class="side-form-ctrl" [(ngModel)]="attendanceNote" id="attedNote"\r\n                                    name="attedNote" placeholder="Enter Exam Description"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div class="c-sm-6 c-md-6 c-lg-6" style="margin-top: 20px;">\r\n                            <div class="field-checkbox-wrapper">\r\n\r\n                                <input type="checkbox" value="" id="msgAbsentees" name="msgAbsentees"\r\n                                    class="form-checkbox" [(ngModel)]="smsAbsenteesChkbx">\r\n                                <label for="msgAbsentees">Send Sms For Absentees</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="row filterSection">\r\n                        <div class="c-sm-3 c-md-3 c-lg-3">\r\n                            <h3>Total Students : {{studentList.length}} </h3>\r\n                        </div>\r\n\r\n                        <div class="c-sm-6 c-md-6 c-lg-6">\r\n\r\n                            <span class="leave">{{leaveCount}}</span>\r\n                            <h5>Leave</h5>\r\n\r\n                            <span class="absent">{{absentCount}}</span>\r\n                            <h5>Absent</h5>\r\n\r\n                            <span class="present">{{presentCount}}</span>\r\n                            <h5>Present</h5>\r\n                        </div>\r\n\r\n                        <div class="c-sm-3 c-md-3 c-lg-3">\r\n                            <div class="field-checkbox-wrapper">\r\n\r\n                                <input type="checkbox" value="" class="form-checkbox" id="MarkPresent"\r\n                                    [checked]="checkCheckAllChkboxStatus()" (change)="markAllPresent($event)">\r\n                                <label for="MarkAllPresent">Mark All Present</label>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class="attendanceMain">\r\n                        <div class="table-scroll-wrapper">\r\n                            <div class="table table-responsive">\r\n                                <table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th style="font-size: 14px;font-weight: 600;">Student Id</th>\r\n                                            <th style="font-size: 14px;font-weight: 600;">Student Name</th>\r\n                                            <th style="font-size: 14px;font-weight: 600;">Attendance</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor="let s of studentList; let i=index;">\r\n                                            <td>\r\n                                                {{s.student_disp_id}}\r\n                                            </td>\r\n                                            <td>\r\n                                                {{s.student_name}}\r\n                                            </td>\r\n                                            <td>\r\n                                                <div class="btnGroup">\r\n                                                    <button id="leaveBtnCourse{{s.student_id}}"\r\n                                                        [disabled]="getDisability(s)"\r\n                                                        (click)="markAttendaceBtnClickCourse($event , s , i)"\r\n                                                        class="btn" [ngClass]="getClassForLeave(s)">L</button>\r\n                                                    <button id="absentBtnCourse{{s.student_id}}"\r\n                                                        [disabled]="getDisability(s)"\r\n                                                        (click)="markAttendaceBtnClickCourse($event , s, i)" class="btn"\r\n                                                        [ngClass]="getClassForAbsent(s)">A</button>\r\n                                                    <button id="presentBtnCourse{{s.student_id}}"\r\n                                                        [disabled]="getDisability(s)"\r\n                                                        (click)="markAttendaceBtnClickCourse($event , s, i)" class="btn"\r\n                                                        [ngClass]="getClassForPresent(s)">P</button>\r\n                                                </div>\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                        <tr *ngIf="studentList.length == 0">\r\n                                            <td colspan="3">\r\n                                                No Students Record\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="clearfix" style="margin-top: 10px">\r\n                        <aside class="pull-right popup-btn">\r\n                            <input type="button" value="Cancel" class="btn" (click)="closeCourseLevelAttendance()">\r\n                            <input type="button" value="Mark Attendance" (click)="updateCourseAttendance()" class="btn">\r\n                        </aside>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n\x3c!-- ///////// POPUP/////////////////////////////////// --\x3e\r\n\x3c!-- ///////// POPUP/////////////////////////////////// --\x3e\r\n\x3c!-- ///////// POPUP/////////////////////////////////// --\x3e\r\n\r\n<section id="popup " class="popupWrapper fadeIn " *ngIf="cancelExamPopUp">\r\n    <div class="popup pos-abs popup-body-container ">\r\n        <div class="popup-wrapper pos-rel ">\r\n            <span class="closePopup pos-abs fbold show " id="popupCloseBtn " (click)="closeCancelExamPopUp()">\r\n                <svg class="artdeco-icon" focusable="false" height="24px" preserveAspectRatio="xMinYMin meet"\r\n                    viewBox="0 0 24 24" width="24px" x="0" y="0">\r\n                    <path class="large-icon"\r\n                        d="M20,5.32L13.32,12,20,18.68,18.66,20,12,13.33,5.34,20,4,18.68,10.68,12,4,5.32,5.32,4,12,10.69,18.68,4Z"\r\n                        style="fill: currentColor"></path>\r\n                </svg>\r\n            </span>\r\n            <div class="popup-content">\r\n                <h2 *ngIf="isLangInstitute">Batch Exam Schedule ({{cancelExamData.exam_date}}\r\n                    ({{cancelExamData.start_time}} - {{cancelExamData.end_time}}))\r\n                    Cancellation\r\n                </h2>\r\n                <h2 *ngIf="!isLangInstitute">\r\n                    Do you want to cancel scheduled Exam?\r\n                </h2>\r\n\r\n                <div class="cancel-Class-Wrapper">\r\n\r\n                    <div class="row attendance-Note">\r\n                        <div class="c-sm-12 c-md-12 c-lg-12" style="padding: 0px 0px;">\r\n                            <div class="form-wrapper">\r\n                                <label for="cancelTxtBx">Cancellation Reason\r\n                                    <span class="text-danger">*</span>\r\n                                </label>\r\n                                <textarea class="side-form-ctrl" style="height: 90px;"\r\n                                    [(ngModel)]="cancelPopUpData.reason" id="cancelTxtBx" name="cancelTxtBx"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="clearfix" style="margin-top: 10px">\r\n                        <aside class="pull-left" style="margin-top: 10px">\r\n                            <div class="field-checkbox-wrapper">\r\n                                <input type="checkbox" value="" id="chkBxNotifyStudent" name="chkBxNotifyStudent"\r\n                                    class="form-checkbox" [(ngModel)]="cancelPopUpData.notify">\r\n                                <label for="chkBxNotifyStudent">Notify Students</label>\r\n                            </div>\r\n                        </aside>\r\n                        <aside *ngIf="isLangInstitute" class="pull-right popup-btn">\r\n                            <input type="button" value="No" class="btn" (click)="closeCancelExamPopUp()"\r\n                                style="width:70px;">\r\n                            <input type="button" value="Yes" (click)="cancelExamClassSchedule()" class="fullBlue btn"\r\n                                style="width:70px;">\r\n                        </aside>\r\n                        <aside *ngIf="!isLangInstitute" class="pull-right popup-btn">\r\n                            <input type="button" value="No" class="btn" (click)="closeCancelExamPopUp()"\r\n                                style="width:70px;">\r\n                            <input *ngIf="jsonVar.cancelCourseLevel" type="button" value="Yes"\r\n                                (click)="cancelCourseLevelExam()" class="fullBlue btn" style="width:70px;">\r\n                            <input *ngIf="!jsonVar.cancelCourseLevel" type="button" value="Yes"\r\n                                (click)="cancelCourseExam()" class="fullBlue btn" style="width:70px;">\r\n                        </aside>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n\x3c!--\r\n<div class="c-sm-2 c-lg-2 c-md-2">\r\n  <span>{{row.subject_name}}</span>\r\n\r\n</div>\r\n\r\n<div class="c-sm-1 c-lg-1 c-md-1" *ngIf="(data.selectedCourseList.is_exam_grad_feature == 0)">\r\n  <span>{{row.total_marks}}</span>\r\n  <input type="text" class="side-form-ctrl torlMarksWidth" name="label" [(ngModel)]="row.total_marks">\r\n</div>\r\n\r\n<div class="c-sm-2 c-lg-2 c-md-2">\r\n  <span>{{row.class_desc}}</span>\r\n  <input type="text" class="side-form-ctrl torlMarksWidth" name="label" [(ngModel)]="row.total_marks">\r\n  <input type="Text" class="side-form-ctrl  constantHeight" placeholder="Topics" id="topics">\r\n</div>\r\n\r\n\r\n  <div class="c-sm-2 c-lg-2 c-md-2">\r\n    <span>{{row.exam_desc}}</span>\r\n    <textarea class="side-form-ctrl constantHeight" [(ngModel)]="data.courseModelAdder.exam_desc" id="customDescTxt" name="customDescTxt"></textarea>\r\n  </div>\r\n\r\n  <div class="c-sm-2 c-lg-2 c-md-2">\r\n    <span>{{row.room_no}}</span>\r\n    <input type="string" class="side-form-ctrl constantHeight" [(ngModel)]="data.courseModelAdder.room_no" id="inpTotalMarks">\r\n  </div> --\x3e'},kiIp:function(e,t,s){"use strict";s.r(t),s.d(t,"CourseExamModule",(function(){return D}));var i=s("fXoL"),n=s("hGdz"),r=s("3Pt+"),a=s("ofXK"),o=s("wd/R"),c=s("LRne"),l=s("Sy1n"),d=s("xf7K"),h=s("XOl9"),p=s("nKv/"),u=s("N+K7"),m=s("BfJf"),b=s("oWFQ"),g=function(e,t,s,i){var n,r=arguments.length,a=r<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,s):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,s,i);else for(var o=e.length-1;o>=0;o--)(n=e[o])&&(a=(r<3?n(a):r>3?n(t,s,a):n(t,s))||a);return r>3&&a&&Object.defineProperty(t,s,a),a},x=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},f=function(e){return e&&e.__esModule?e:{default:e}};let _=(()=>{let e=class{constructor(e,t,s,i,n,r,a,c){this.apiService=e,this.toastCtrl=t,this.auth=s,this.topicService=i,this.cd=n,this._http=r,this.commonApiCall=a,this.msgSrvc=c,this.masterCourseList=[],this.courseList=[],this.batchesList=[],this.fullResponse=[],this.examScheduleData=[],this.cancelledSchedule=[],this.studentList=[],this.examSchedule=[],this.viewList=[],this.subjectListData=[],this.newExamSubjectData=[],this.subjectListDataSource=[],this.subject_topics=[],this.row_edit_subject_topicId=[],this.checkedKeys=[],this.topicsName=[],this.isLangInstitute=!1,this.showContentSection=!1,this.showCourseStartEndDate=!1,this.markAttendancePopUp=!1,this.cancelExamPopUp=!1,this.smsAbsenteesChkbx=!1,this.absentCount=0,this.presentCount=0,this.leaveCount=0,this.attendanceNote="",this.batchAdderData={exam_date:o().format("YYYY-MM-DD"),exam_desc:"",start_time:{hour:"12 PM",minute:"00"},end_time:{hour:"1 PM",minute:"00"},total_marks:0,topics_covered:""},this.batchData={standard_id:-1,subject_id:-1,batch_id:-1},this.cancelPopUpData={reason:"",notify:!0},this.courseData={master_course:"-1",course_id:-1,requested_date:o().format("YYYY-MM-DD")},this.types=[{label:"Course",value:"course"},{label:"Subject",value:"subject"}],this.batchStartDate="",this.batchEndDate="",this.markAttendanceData="",this.cancelExamData="",this.times=["1 AM","2 AM","3 AM","4 AM","5 AM","6 AM","7 AM","8 AM","9 AM","10 AM","11 AM","12 PM","1 PM","2 PM","3 PM","4 PM","5 PM","6 PM","7 PM","8 PM","9 PM","10 PM","11 PM","12 AM"],this.minArr=["00","05","10","15","20","25","30","35","40","45","50","55"],this.selectedType="course",this.currentDate=o().format("YYYY-MM-DD"),this.jsonVar={isSheduleBatch:!0,cancelCourseLevel:!1},this.newExamData={startTimeHrs:"12 PM",startTimeMins:"00",endTimeHrs:"1 PM",endTimeMins:"00",total_marks:""},this.exam_desc="",this.exam_room_no="",this.subject_id="",this.subject_name="",this.exam_marks="",this.edit_subject_id="",this.edit_subject_name="",this.edit_exam_marks="",this.edit_subject_topics="",this.edit_exam_desc="",this.edit_exam_room_no="",this.row_edit_subject_id="",this.row_edit_subject_name="",this.row_edit_exam_marks="",this.row_edit_subject_topics="",this.row_edit_exam_desc="",this.row_edit_exam_room_no="",this.total_marks_to_show=0,this.topicBox=!0,this.selectAllTopics=!1,this.showTopicsPopUp=!1,this.topicsList=[],this.totalTopicsList=[],this.subjectsList=[],this.selectedTopicsListObj=[],this.selectedTopics="",this.getSubjectObject="",this.showExamEditModal=!1,this.enableCheck=!0,this.checkChildren=!0,this.checkParents=!0,this.checkOnClick=!0,this.checkMode="multiple",this.topicLinkColor=!1,this.changeColor=!1,this.multiClickDisabled=!1,this.selectedRow="",this.coursePlannerStatus=!1,this.schoolModel=!1,this.examTypeList=[],this.selectedExamTypeId="-1"}get checkableSettings(){return{checkChildren:this.checkChildren,checkParents:this.checkParents,enabled:this.enableCheck,mode:this.checkMode,checkOnClick:this.checkOnClick}}ngOnInit(){this.institute_id=sessionStorage.getItem("institute_id"),this.checkInstituteType(),this.fetchPrefillData(),this.checkForCoursePlannerRoute(),this.auth.schoolModel.subscribe(e=>{this.schoolModel=!1,e&&(this.schoolModel=!0)})}checkForCoursePlannerRoute(){this.coursePlannerStatus=sessionStorage.getItem("isFromCoursePlanner")}fetchPrefillData(){this.isLangInstitute?this.getMasterCourseBatchDataNew():this.getMasterCourse()}checkAllTopics(){this.selectAllTopics?(this.checkedKeys=[],this.topicsData.forEach(e=>{this.checkedKeys.push(e.topicId)})):this.checkedKeys=[]}getMasterCourseBatchData(){this.auth.showLoader(),this.apiService.getCombinedList(this.batchData.standard_id,this.batchData.subject_id).subscribe(e=>{this.auth.hideLoader(),0==this.masterCourseList.length&&(this.masterCourseList=e.standardLi),null!=e.batchLi&&e.batchLi.length>0&&(this.batchesList=e.batchLi,this.subjectsList=e.subjectLi),null!=e.subjectLi&&e.subjectLi.length>0&&(this.courseList=e.subjectLi,this.subjectsList=e.subjectLi)},e=>{console.log(e),this.auth.hideLoader()})}getMasterCourseBatchDataNew(){let e="/api/v1/standards/standard-subject-list/"+this.institute_id+"?is_active=Y&is_subject_required=true";this.auth.showLoader(),this._http.getData(e).subscribe(e=>{this.auth.hideLoader(),this.masterCourseList=e.result},e=>{this.auth.hideLoader(),console.log(e)})}getCourse(){for(let e=0;e<this.masterCourseList.length;e++)this.batchData.standard_id==this.masterCourseList[e].standard_id&&(this.courseList=this.masterCourseList[e].subject_list)}getBatchList(){this.auth.showLoader();let e="/api/v1/batches/batch-list/"+this.institute_id+"/"+this.batchData.subject_id+"?is_active_not_expire=A&sorted_by=batch_name";this._http.getData(e).subscribe(e=>{this.auth.hideLoader(),this.batchesList=e.result},e=>(this.auth.hideLoader(),e))}fetchTopics(){this.auth.showLoader(),this.totalTopicsList=[],this.selectedTopics="",this.selectedTopicsListObj=[],this.topicService.getAllTopicsSubTopics(this.batchData.subject_id).subscribe(e=>{this.topicsList=[],this.topicsList=e,this.topicsList.length&&null!=this.topicsList?(this.showTopicsPopUp=!0,this.auth.hideLoader(),this.topicsList.forEach(e=>{this.totalTopicsList.push(e),e.checked=!1,e.subTopic.length&&this.getAllTopics(e.subTopic)})):(this.auth.hideLoader(),this.messageNotifier("info","Info","No topics available to link !"))},e=>{this.auth.hideLoader(),this.messageNotifier("error","",e.error.message)})}saveSelectedTopics(){this.auth.showLoader(),this.selectedTopicsListObj=[],this.selectedTopicsListObj=this.totalTopicsList.filter(e=>1==e.checked),null!=this.selectedTopicsListObj&&(this.selectedTopics=this.selectedTopicsListObj.map(e=>e.topicId),this.selectedTopics=this.selectedTopics.join("|")),this.messageNotifier("success","","Topics linked successfully"),this.auth.hideLoader(),this.showTopicsPopUp=!1}fetchSelectedTopics(){this.auth.showLoader(),this.showTopicsPopUp=!0,this.selectedTopicsListObj.forEach(e=>{this.totalTopicsList.find(t=>t.topicId==e.topicId).checked=!0}),this.auth.hideLoader()}getAllTopics(e){e.forEach(e=>{this.totalTopicsList.push(e),e.checked=!1,e.subTopic.length&&this.getAllTopics(e.subTopic)})}toggleArrow(e){e.isExpand=!e.isExpand}closeTopicModal(e){this.showTopicsPopUp=!1,this.showExamEditModal=!1}linkTopics(){this.auth.showLoader();var e,t=this.totalTopicsList.filter(e=>1==e.checked);null!=t&&(e=(e=t.map(e=>e.topicId)).join("|"),this.getSubjectObject.topics_covered=e,this.examSchedule.find(e=>e.schd_id==this.getSubjectObject.schd_id).topics_covered=e),this.showTopicsPopUp=!1,this.auth.hideLoader(),this.showExamEditModal=!1,this.messageNotifier("success","","Topics updated successfully")}selectTopics(e,t){e.checked=!e.checked,e.subTopic.length&&this.checkAllSubTopics(e.subTopic,t.target.checked),t.target.checked||0!=e.parentTopicId&&this.uncheckParent(e),this.checkParent(e)}checkAllSubTopics(e,t){e.forEach(e=>{e.checked=!!t,e.subTopic.length&&this.checkAllSubTopics(e.subTopic,t)})}checkParent(e){var t=!0;if(null!=this.totalTopicsList.find(t=>t.topicId==e.topicId)){var s=this.totalTopicsList.find(t=>t.topicId==e.parentTopicId);null!=s&&s.subTopic.length&&(s.subTopic.forEach(e=>{e.checked||(t=!1)}),t&&(s.checked=!0,0!=s.parentTopicId&&this.checkParent(s)))}}uncheckParent(e){var t=this.totalTopicsList.find(t=>t.topicId==e.parentTopicId);null!=t&&(t.checked=!1,0!=t.parentTopicId&&this.uncheckParent(t))}editTopics(e){if(console.log("inside edit topics:",e),this.getSubjectObject="",this.getSubjectObject=e,this.auth.showLoader(),""!=e.topics_covered&&null!=e.topics_covered)var t=e.topics_covered.split("|");var s=[];this.topicService.getAllTopicsSubTopics(this.batchData.subject_id).subscribe(e=>{this.topicsList=[],this.topicsList=e,null!=this.topicsList&&this.topicsList.length?(this.showTopicsPopUp=!0,this.showExamEditModal=!0,this.auth.hideLoader(),this.topicsList.forEach(e=>{s.push(e),null!=t&&t.indexOf(e.topicId.toString())>-1&&(e.checked=!0),e.subTopic.length&&this.fetchAllTopics(e.subTopic,s,t)}),this.totalTopicsList=[],this.totalTopicsList=s):(this.auth.hideLoader(),this.messageNotifier("info","Info","No topics available to link"))},e=>{this.auth.hideLoader(),this.messageNotifier("error","",e.error.message)})}fetchAllTopics(e,t,s){e.forEach(e=>{null!=s&&null!=s&&s.indexOf(e.topicId.toString())>-1&&(e.checked=!0),t.push(e),e.subTopic.length&&this.fetchAllTopics(e.subTopic,t,s)})}onBatchMasterCourseSelection(e){this.batchData.subject_id=-1,this.batchData.batch_id=-1,this.courseList=[],this.batchesList=[],this.getCourse()}onBatchCourseSelection(e){this.batchData.batch_id=-1,-1!=this.batchData.subject_id&&(this.batchesList=[],this.getBatchList()),this.getCourseName(e)}getCourseName(e){this.selectedCourseName="",this.selectedCourseName=this.subjectsList.find(t=>t.subject_id==e).subject_name}batchModelGoClick(){-1!=this.batchData.batch_id?(this.cancelledSchedule=[],this.examSchedule=[],this.auth.showLoader(),this.apiService.getExamSchedule(this.batchData.batch_id).subscribe(e=>{this.auth.hideLoader(),this.showContentSection=!0,this.jsonVar.isSheduleBatch=!0,this.examScheduleData=e,console.log("this.examScheduleData",this.examScheduleData),this.batchStartDate=this.examScheduleData.batch_start_date,this.batchEndDate=this.examScheduleData.batch_end_date,o(this.batchEndDate).format("YYYY-MM-DD")<o().format("YYYY-MM-DD")?this.jsonVar.isSheduleBatch=!1:this.jsonVar.isSheduleBatch=!0,""!=e.otherSchd&&null!=e.otherSchd&&e.otherSchd.length>0&&(this.examSchedule=e.otherSchd),""!=e.cancelSchd&&null!=e.cancelSchd&&e.cancelSchd.length>0&&(this.cancelledSchedule=e.cancelSchd)},e=>{this.auth.hideLoader(),this.messageNotifier("error","",e.error.message)})):-1==this.batchData.standard_id?this.messageNotifier("error","","Please Select  Ctaegory/Course, Batch and then Batch or Batch"):-1==this.batchData.subject_id?this.messageNotifier("error","","Please Select Batch and then Batch or Batch"):-1==this.batchData.batch_id&&this.messageNotifier("error","","Please Select Batch")}addNewExamSchedule(){if(this.examScheduleData.is_exam_grad_feature<=0&&(this.batchAdderData.total_marks=Number(this.batchAdderData.total_marks),0==this.batchAdderData.total_marks))return void this.messageNotifier("error","","Please provide total marks");let e={};e.total_marks=this.batchAdderData.total_marks,e.exam_date=o(this.batchAdderData.exam_date).format("YYYY-MM-DD");let t=o(this.createTimeInFormat(this.batchAdderData.start_time.hour,this.batchAdderData.start_time.minute,"comp"),"h:mma"),s=o(this.createTimeInFormat(this.batchAdderData.end_time.hour,this.batchAdderData.end_time.minute,"comp"),"h:mma");if(!t.isBefore(s))return this.messageNotifier("error","","Please enter correct start time and end time"),!1;e.start_time=this.createTimeInFormat(this.batchAdderData.start_time.hour,this.batchAdderData.start_time.minute,""),e.end_time=this.createTimeInFormat(this.batchAdderData.end_time.hour,this.batchAdderData.end_time.minute,""),e.duration=s.diff(t,"minutes"),e.exam_desc=this.batchAdderData.exam_desc,e.topics_covered=this.selectedTopics,e.schd_id=0,e.isReferenced="Y",this.examSchedule.push(e),this.batchAdderData={exam_date:o().format("YYYY-MM-DD"),exam_desc:"",start_time:{hour:"12 PM",minute:"00"},end_time:{hour:"1 PM",minute:"00"},total_marks:0,topics_covered:""},this.selectedTopics="",this.selectedTopicsListObj=[]}addDataToExamSchedule(){let e=this.makeJsonToSendData();if(0==e)return;let t="";t=0==this.examScheduleData.otherSchd||null==this.examScheduleData.otherSchd||null==this.examScheduleData.otherSchd?"post":"put",this.auth.isRippleLoad.getValue()||(this.auth.showLoader(),this.apiService.serverRequestToSaveSchedule(e,t).subscribe(e=>{this.auth.hideLoader(),this.messageNotifier("success","Successfully","Schedule Created Successfully"),this.batchModelGoClick()},e=>{this.auth.hideLoader(),this.messageNotifier("error","",e.error.message)})),this.selectedTopics="",this.selectedTopicsListObj=[]}makeJsonToSendData(){let e={};if(e.batch_id=this.batchData.batch_id,e.exam_freq="OTHER",e.otherSchd=[],this.examSchedule.length>0)for(let t=0;t<this.examSchedule.length;t++){let s={};s.exam_date=o(this.examSchedule[t].exam_date).format("YYYY-MM-DD"),s.start_time=this.examSchedule[t].start_time,s.end_time=this.examSchedule[t].end_time,s.total_marks=this.examSchedule[t].total_marks,s.exam_desc=this.examSchedule[t].exam_desc,s.isReferenced=this.examSchedule[t].isReferenced,s.duration=this.examSchedule[t].duration,s.schd_id=this.examSchedule[t].schd_id,s.topics_covered=this.examSchedule[t].topics_covered,e.otherSchd.push(s)}return e}clearExam(){this.examScheduleData.coursesList[0].courseClassSchdList?(this.calculateTotalMarks(),this.clearAllField()):this.messageNotifier("error","","Only class present")}editSubject(e,t){""!==this.selectedRow&&(""!=this.row_edit_subject_id&&null!=this.row_edit_subject_id?(document.getElementById(("row_already"+this.selectedRow).toString()).classList.add("displayComp"),document.getElementById(("row_already"+this.selectedRow).toString()).classList.remove("editComp")):(document.getElementById(("row"+this.selectedRow).toString()).classList.add("displayComp"),document.getElementById(("row"+this.selectedRow).toString()).classList.remove("editComp"))),this.selectedRow=e,document.getElementById(("row"+e).toString()).classList.remove("displayComp"),document.getElementById(("row"+e).toString()).classList.add("editComp"),this.edit_subject_id=t.subject_id,this.edit_subject_name=t.subject_name,this.edit_exam_marks=t.exam_marks,this.edit_subject_topics=t.subject_topics,this.edit_subject_topicId=t.topicsId,this.edit_exam_desc=t.exam_desc,this.edit_exam_room_no=t.exam_room_no,this.checkedKeys=t.topicsId}updateSubject(e,t){if(null==this.edit_subject_id||""==this.edit_subject_id)return void this.messageNotifier("error","","No subject(s) added!");if(""==this.edit_exam_marks||null==this.edit_exam_marks)return void this.messageNotifier("error","","Please Provide Marks");let s="";this.subjectListData.length>0&&this.subjectListData[0].forEach(e=>{this.edit_subject_id==e.subject_id&&(s=e.subject_name)});let i=this.topicsName.join(", ");this.newExamSubjectData[e].subject_id=this.edit_subject_id,this.newExamSubjectData[e].subject_name=s,this.newExamSubjectData[e].exam_marks=this.edit_exam_marks,this.newExamSubjectData[e].subject_topics=i,this.newExamSubjectData[e].topicsId=this.checkedKeys,this.newExamSubjectData[e].exam_desc=this.edit_exam_desc,this.newExamSubjectData[e].exam_room_no=this.edit_exam_room_no,this.edit_subject_id="",this.edit_subject_name="",this.edit_exam_marks="",this.edit_subject_topics="",this.edit_exam_desc="",this.edit_exam_room_no="",this.edit_subject_topicId=[],this.calculateTotalMarks(),document.getElementById(("row"+e).toString()).classList.add("displayComp"),document.getElementById(("row"+e).toString()).classList.remove("editComp"),this.selectedRow=""}clearAllField(){this.newExamSubjectData=[],this.newExamData.startTimeHrs="12 PM",this.newExamData.startTimeMins="00",this.newExamData.endTimeHrs="1 PM",this.newExamData.endTimeMins="00",this.newExamData.total_marks="",this.clearField()}deleteExamSchedule(e,t){this.examSchedule.splice(t,1)}notifyExamSchedule(e){confirm("Are you sure u want to send Exam Schedule SMS to the batch?")&&this.apiService.notifyStudentExam(e.schd_id).subscribe(e=>{this.messageNotifier("success","Notified","Notification Sent Successfully")},e=>{this.messageNotifier("error","",e.error.message)})}cancelExamSchedule(e){this.cancelExamPopUp=!0,this.cancelExamData=e}closeCancelExamPopUp(){this.jsonVar.cancelCourseLevel=!1,this.cancelExamPopUp=!1,this.cancelExamData="",this.cancelPopUpData={reason:"",notify:!0}}cancelExamClassSchedule(){if(""==this.cancelPopUpData.reason.trim())return void this.messageNotifier("error","","Please enter cancellation reason");let e="";if(e=this.cancelPopUpData.notify?"Y":"N",!this.auth.isRippleLoad.getValue()){this.auth.showLoader();let t={batch_id:this.batchData.batch_id,exam_freq:"OTHER",cancelSchd:[{schd_id:this.cancelExamData.schd_id,exam_desc:this.cancelPopUpData.reason,is_notified:e}]};this.apiService.cancelExamSchedule(t).subscribe(e=>{this.messageNotifier("success","Successfully Cancelled","Scheduled exam cancelled successfully"),this.auth.hideLoader(),this.batchModelGoClick(),this.closeCancelExamPopUp()},e=>{this.auth.hideLoader(),this.messageNotifier("error","",e.error.message)})}}markAttendanceSchedule(e){this.markAttendancePopUp=!0,this.markAttendanceData=e,this.getStudentList()}getStudentList(){let e={attendanceSchdId:this.markAttendanceData.schd_id,batch_id:this.batchData.batch_id};this.auth.showLoader(),this.apiService.fetchStudentList(e).subscribe(e=>{this.auth.hideLoader(),this.studentList=e,this.getTotalCountForCourse(e),e.length>0?this.attendanceNote=e[0].dateLi[0].attendance_note:this.attendanceNote=""},e=>{this.auth.hideLoader(),this.messageNotifier("error","",e.error.message),this.closeCourseLevelAttendance()})}getDisability(e){return"L"==e.dateLi[0].status&&"N"==e.dateLi[0].isStatusModified}markAttendaceBtnClickCourse(e,t,s){document.getElementById("leaveBtnCourse"+t.student_id).classList.remove("classLeaveBtn"),document.getElementById("absentBtnCourse"+t.student_id).classList.remove("classAbsentBtn"),document.getElementById("presentBtnCourse"+t.student_id).classList.remove("classPresentBtn"),"L"==e.target.innerText?(document.getElementById("leaveBtnCourse"+t.student_id).classList.add("classLeaveBtn"),this.studentList[s].dateLi[0].status="L",this.studentList[s].dateLi[0].isStatusModified="Y"):"A"==e.target.innerText?(document.getElementById("absentBtnCourse"+t.student_id).classList.add("classAbsentBtn"),this.studentList[s].dateLi[0].status="A",this.studentList[s].dateLi[0].isStatusModified="Y"):(document.getElementById("presentBtnCourse"+t.student_id).classList.add("classPresentBtn"),this.studentList[s].dateLi[0].status="P",this.studentList[s].dateLi[0].isStatusModified="Y"),this.getTotalCountForCourse(this.studentList)}getTotalCountForCourse(e){this.absentCount=0,this.presentCount=0,this.leaveCount=0;for(let t=0;t<e.length;t++)"P"==e[t].dateLi[0].status?this.presentCount++:"A"==e[t].dateLi[0].status?this.absentCount++:this.leaveCount++}getClassForLeave(e){return"L"==e.dateLi[0].status?"classLeaveBtn":""}getClassForAbsent(e){return"A"==e.dateLi[0].status?"classAbsentBtn":""}getClassForPresent(e){return"P"==e.dateLi[0].status?"classPresentBtn":""}closeCourseLevelAttendance(){this.markAttendancePopUp=!1,this.studentList=[],this.absentCount=0,this.presentCount=0,this.leaveCount=0,this.attendanceNote="",this.smsAbsenteesChkbx=!1,this.markAttendanceData=""}markAllPresent(e){e.target.checked?this.studentList.forEach(e=>{"L"==e.dateLi[0].status&&"N"==e.dateLi[0].isStatusModified||(document.getElementById("leaveBtnCourse"+e.student_id).classList.remove("classLeaveBtn"),document.getElementById("absentBtnCourse"+e.student_id).classList.remove("classAbsentBtn"),document.getElementById("presentBtnCourse"+e.student_id).classList.remove("classPresentBtn"),document.getElementById("presentBtnCourse"+e.student_id).classList.add("classPresentBtn"),e.dateLi[0].status="P",e.dateLi[0].isStatusModified="Y")}):this.studentList.forEach(e=>{"L"==e.dateLi[0].status&&"N"==e.dateLi[0].isStatusModified||(document.getElementById("leaveBtnCourse"+e.student_id).classList.remove("classLeaveBtn"),document.getElementById("absentBtnCourse"+e.student_id).classList.remove("classAbsentBtn"),document.getElementById("presentBtnCourse"+e.student_id).classList.remove("classPresentBtn"),e.dateLi[0].status="A",e.dateLi[0].isStatusModified="Y")}),this.getTotalCountForCourse(this.studentList)}checkCheckAllChkboxStatus(){let e=!1;for(let t=0;t<this.studentList.length;t++){if("P"!=this.studentList[t].dateLi[0].status){e=!1;break}e=!0}return e}updateCourseAttendance(){this.auth.showLoader();let e=this.makeJsonForAttendceMark();this.apiService.markAttendance(e).subscribe(e=>{this.auth.hideLoader(),this.messageNotifier("success","Attendance Marked","Attendance Marked Successfully"),this.closeCourseLevelAttendance()},e=>{this.auth.hideLoader(),this.messageNotifier("error","",e.error.message)})}makeJsonForAttendceMark(){let e="";e=this.smsAbsenteesChkbx?"Y":"N";let t=[];for(let s=0;s<this.studentList.length;s++){let i={};i.batch_id=this.batchData.batch_id,i.isNotify=e,i.student_id=this.studentList[s].student_id,i.dateLi=[{date:this.studentList[s].dateLi[0].date,status:this.studentList[s].dateLi[0].status,isStatusModified:this.studentList[s].dateLi[0].isStatusModified,attendance_note:this.attendanceNote,schId:this.studentList[s].dateLi[0].schId.toString()}],t.push(i)}return t}notifyCancelClass(e){if(confirm("Are you sure, You want to notify?")){let t={batch_id:this.batchData.batch_id,class_schedule_id:e.schd_id,is_exam_schedule:"Y"};this.apiService.notifyCancelledClass(t).subscribe(e=>{this.messageNotifier("success","Success","Notified Successfully")},e=>{this.messageNotifier("error","",e.error.message)})}}unCancelClass(e){if(confirm("Are you sure, you want  to uncancel the exam schedule??")){let t={batch_id:this.batchData.batch_id,cancelSchd:[{schd_id:e.schd_id}]};this.apiService.uncancelClassSchedule(t).subscribe(e=>{this.messageNotifier("success","Uncancelled Succesfully","Exam Uncancelled Successfully"),this.batchModelGoClick()},e=>{this.messageNotifier("error","",e.error.message)})}}getMasterCourseList(){this.auth.showLoader(),this.apiService.getMasterCourse().subscribe(e=>{this.auth.hideLoader(),this.masterCourseList=e},e=>{console.log(e),this.auth.hideLoader()})}getMasterCourse(){let e,t="/api/v1/courseMaster/master-course-list/"+this.institute_id+"?is_active_not_expire=Y&sorted_by=course_name";this.auth.showLoader(),this._http.getData(t).subscribe(t=>{this.auth.hideLoader(),this.fullResponse=t.result,e=Object.keys(t.result),console.log("keys",e);for(let s=0;s<e.length;s++)this.masterCourseList.push(e[s])},e=>{this.auth.hideLoader(),console.log(e)})}getCourseList(e){this.courseList=[];let t=this.fullResponse[this.courseData.master_course];for(let s=0;s<t.length;s++)this.courseList.push(t[s])}displayCourseDate(){console.log(this.courseData.course_id),this.showCourseStartEndDate=!0;for(let e=0;e<this.courseList.length;e++)this.courseList[e].course_id==this.courseData.course_id&&(this.batchStartDate=this.courseList[e].start_date,this.batchEndDate=this.courseList[e].end_date)}validateDateRange(){let e={},t=!0;if(this.courseList.length>0){e=this.courseList.filter(e=>e.course_id==this.courseData.course_id);let s=this.courseData.requested_date;o(e[0].start_date).format("YYYY-MM-DD")<=o(s).format("YYYY-MM-DD")&&o(s).format("YYYY-MM-DD")<=o(e[0].end_date).format("YYYY-MM-DD")?t=!0:(this.messageNotifier("error","Date Out Of Range","You have selected date out of course start date "+e[0].start_date+" and course end date "+e[0].end_date),t=!1)}return t}getExamSchedule(){if(""!=this.courseData.master_course&&-1!=this.courseData.course_id){if(!this.validateDateRange())return this.showContentSection=!1,!1;this.clearAllField(),this.auth.showLoader(),this.courseData.requested_date=o(this.courseData.requested_date).format("YYYY-MM-DD"),this.apiService.getSchedule(this.courseData).subscribe(e=>{this.auth.hideLoader(),this.multiClickDisabled=!1,this.examScheduleData=e,this.calculateDataAsPerSelection(e),this.showContentSection=!0},e=>{this.auth.hideLoader(),this.messageNotifier("error","",e.error.message)})}else this.messageNotifier("error","","Please Provide Mandatory Fields")}subjectChanged(){this.checkedKeys=[],this.changeColor=!1,this.topicsName=[]}calculateDataAsPerSelection(e){if(this.subjectListData=[],this.viewList=[],null!=e&&e.coursesList.length>0)for(let t=0;t<e.coursesList.length;t++)if(this.courseData.course_id==e.coursesList[t].course_id){this.subjectListData.push(e.coursesList[t].batchesList);let s={};s.selectedCourseList=e.coursesList[t],s.subjectList=e.coursesList[t].batchesList,s.courseModelAdder={start_time:{hour:"12 PM",minute:"00"},end_time:{hour:"1 PM",minute:"00"},total_marks:"",exam_desc:"",room_no:""},s.coursetableAdder={batch_id:-1,total_marks:""},null!=e.coursesList[t].courseClassSchdList&&e.coursesList[t].courseClassSchdList.length>0?(s.courseTableList=e.coursesList[t].courseClassSchdList,s.courseModelAdder.start_time=this.breakTimeFormat(e.coursesList[t].courseClassSchdList[0].start_time),s.courseModelAdder.end_time=this.breakTimeFormat(e.coursesList[t].courseClassSchdList[0].end_time),s.courseModelAdder.exam_desc=e.coursesList[t].courseClassSchdList[0].class_desc,s.courseModelAdder.room_no=e.coursesList[t].courseClassSchdList[0].room_no,s.courseModelAdder.total_marks=0,e.coursesList[t].courseClassSchdList.forEach(e=>{s.courseModelAdder.total_marks+=Number(e.total_marks)})):s.courseTableList=[],this.viewList.push(s)}}checkNgetiveValue(e){e<0&&this.messageNotifier("error","","Negative mark not allowed")}topicLinking(e,t){let s;for(let i=0;i<e.length;i++)this.viewList[t].coursetableAdder.batch_id==e[i].batch_id&&(s=e[i].subject_id);""!=s&&null!=s&&"-1"!=s&&null!=s?(this.auth.showLoader(),this.topicService.getAllTopicsSubTopics(s).subscribe(t=>{let s;if(this.topicLinkColor=!0,s=t,null!=s&&0!=s.length){this.topicBox=!1,this.auth.hideLoader(),this.topicsData=t;let s="";e.forEach(e=>{e.subject_id==this.subject_id&&(s=e.subject_name)}),document.getElementById("topicSubName").innerHTML=s,document.getElementById("topicCount").innerHTML=this.topicsData.length,this.children=e=>Object(c.a)(e.subTopic),this.hasChildren=e=>e.subTopic&&e.subTopic.length>0}else this.auth.hideLoader(),this.messageNotifier("info","Info","No topics available to Link")},e=>{this.auth.hideLoader(),this.messageNotifier("error","",e.error.message)})):this.messageNotifier("error","","Please Select Subject")}topicLinkingForPreSelectedTopics(e){""!=this.row_edit_subject_id&&null!=this.row_edit_subject_id&&"-1"!=this.row_edit_subject_id&&null!=this.row_edit_subject_id?(this.auth.showLoader(),this.topicService.getAllTopicsSubTopics(this.row_edit_subject_id).subscribe(t=>{let s;if(this.checkedKeys=[],s=t,null!=s&&0!=s.length){this.topicBox=!1,this.auth.hideLoader(),this.topicsData=t;let s,i="",n=this.row_edit_subject_topicId.toString();s=null!=n&&n.includes("|")?n.split("|"):n.split(" "),s.forEach(e=>{" "==e&&"0"==e||this.checkedKeys.push(Number(e))}),e.forEach(e=>{e.subject_id==this.row_edit_subject_id&&(i=e.subject_name)}),this.subject_name=i,this.children=e=>Object(c.a)(e.subTopic),this.hasChildren=e=>e.subTopic&&e.subTopic.length>0}else this.auth.hideLoader(),this.messageNotifier("info","Info","No topics available to Link")},e=>{this.auth.hideLoader(),this.messageNotifier("error","",e.error.message)})):this.messageNotifier("error","","Please Select Subject")}topicListing(){""!=this.subject_id&&null!=this.subject_id&&"-1"!=this.subject_id&&null!=this.subject_id?(this.auth.showLoader(),this.topicService.getAllTopicsSubTopics(this.subject_id).subscribe(e=>{let t;if(t=e,null!=t&&0!=t.length){this.topicBox=!1,this.auth.hideLoader(),this.topicsData=e;this.subjectListData[0].forEach(e=>{this.subject_id==e.subject_id&&(this.subject_name=e.subject_name)}),this.children=e=>Object(c.a)(e.subTopic),this.hasChildren=e=>e.subTopic&&e.subTopic.length>0}else this.auth.hideLoader(),this.messageNotifier("info","Info","No topics available to Link")},e=>{this.auth.hideLoader(),this.messageNotifier("error","",e.error.message)})):this.messageNotifier("error","","Please Select Subject")}handleChecking(e){let t=e.item.dataItem.subTopic;if(this.checkedKeys.indexOf(e.item.dataItem.topicId)>-1){let t=e.item.dataItem.subTopic;t.length&&this.removeNLevelTopic(t)}else t.length&&this.AddNLevelTopic(t);this.cd.markForCheck()}removeNLevelTopic(e){if(0!=e.length)e.forEach(e=>{let t=this.checkedKeys.indexOf(e.topicId);t>-1&&this.checkedKeys.splice(t,1),e.subTopic.length&&this.removeNLevelTopic(e.subTopic)}),this.cd.markForCheck();else{let t=this.checkedKeys.indexOf(e.topicId);this.checkedKeys.splice(t,1)}}AddNLevelTopic(e){0!=e.length?e.forEach(e=>{-1==this.checkedKeys.indexOf(e.topicId)&&this.checkedKeys.push(e.topicId),e.subTopic.length&&this.AddNLevelTopic(e.subTopic)}):this.checkedKeys.push(e.topicId)}preSelectedTopicListing(){""!=this.edit_subject_id&&null!=this.edit_subject_id&&"-1"!=this.edit_subject_id&&null!=this.edit_subject_id?(this.auth.showLoader(),this.topicService.getAllTopicsSubTopics(this.edit_subject_id).subscribe(e=>{let t;t=e,null!=t&&0!=t.length?(this.topicBox=!1,this.auth.hideLoader(),this.topicsData=e,this.checkedKeys=this.edit_subject_topicId,this.subjectListDataSource.forEach(e=>{e.subject_id==this.subject_id&&(this.subject_name=e.subject_name)}),this.children=e=>Object(c.a)(e.subTopic),this.hasChildren=e=>e.subTopic&&e.subTopic.length>0):(this.auth.hideLoader(),this.messageNotifier("info","Info","No topics available to Link"))},e=>{this.auth.hideLoader(),this.messageNotifier("error","",e.error.message)})):this.messageNotifier("error","","Please Select Subject")}saveTopic(){let e=this.checkedKeys;this.topicsName=[];e.join("|"),this.topicsData;this.checkedKeys.forEach(e=>{this.findNameInJSON(this.topicsData,e)});for(var t=0;t<this.topicsName.length;t++)null==this.topicsName[t]&&this.topicsName.splice(t,1);if(this.row_edit_subject_id){this.row_edit_subject_topicId=this.checkedKeys;let e=this.row_edit_subject_topicId.join(",").toString().replace(/,/g,"|").split("|");this.row_edit_subject_topicId=e}console.log(this.topicsName),this.topicBox=!0,this.topicLinkColor&&(this.changeColor=!0)}findNameInJSON(e,t){for(var s=0;s<e.length;s++){var i=e[s];i.topicId.toString()==t.toString()&&this.topicsName.push(i.topicName),i.subTopic.length>0&&this.findNameInJSON(i.subTopic,t)}}closeAlert(){this.topicBox=!0,this.topicLinkColor=!1,this.changeColor=!1}addNewExamSubject(){if(this.schoolModel){if(this.newExamSubjectData.length>=1)return void this.messageNotifier("error","","You can not add multiple subject!");if(null==this.selectedExamTypeId||"-1"==this.selectedExamTypeId)return void this.messageNotifier("error","","Please select exam type!")}if(this.newExamData.startTimeHrs==this.newExamData.endTimeHrs&&this.newExamData.startTimeMins==this.newExamData.endTimeMins)return void this.messageNotifier("error","","Exam start time and end time cannot be same!");if(null==this.subject_id||""==this.subject_id)return void this.messageNotifier("error","","No subject(s) added!");if(""==this.exam_marks||null==this.exam_marks)return void this.messageNotifier("error","","Please provide marks!");for(let n=0;n<this.newExamSubjectData.length;n++)if(this.newExamSubjectData[n].subject_id==this.subject_id)return void this.messageNotifier("error","","Selected subject already added!");let e="",t=!1;this.subjectListData[0].forEach(s=>{this.subject_id==s.subject_id&&(e=s.subject_name,this.schoolModel&&(t=s.is_optional_subject))});let s=this.topicsName.join(", "),i={};if(i.subject_id=this.subject_id,i.subject_name=e,i.exam_marks=this.exam_marks,i.subject_topics=s,i.topicsId=this.checkedKeys,i.exam_desc=this.exam_desc,i.exam_room_no=this.exam_room_no,this.schoolModel){let e=this.selectedExamTypeId.split(",");i.exam_type=e[1],i.exam_type_id=e[0],i.is_optional_subject=t}this.newExamSubjectData.push(i),this.calculateTotalMarks(),this.clearField(),this.subject_topics=[]}calculateTotalMarks(){this.total_marks_to_show=0;for(let e=0;e<this.newExamSubjectData.length;e++)this.total_marks_to_show+=this.newExamSubjectData[e].exam_marks}clearField(){this.subject_id="",this.subject_name="",this.exam_marks="",this.subject_topics=[],this.exam_desc="",this.exam_room_no="",this.checkedKeys=[],this.topicsName=[],this.selectedExamTypeId="-1"}addNewExamSubjectCourse(e){if(this.schoolModel){if(this.viewList[e].courseTableList.length>=1)return void this.messageNotifier("error","","You can not add multiple subject!");if(null==this.selectedExamTypeId||"-1"==this.selectedExamTypeId)return void this.messageNotifier("error","","Please select exam type!")}if(-1==this.viewList[e].coursetableAdder.batch_id)return void this.messageNotifier("error","","No subject(s) added!");if("0"==this.viewList[e].selectedCourseList.is_exam_grad_feature&&0==this.viewList[e].coursetableAdder.total_marks)return void this.messageNotifier("error","","Please Provide Marks");let t=this.getSubjectName(this.viewList[e].subjectList,this.viewList[e].coursetableAdder.batch_id);for(let r=0;r<this.viewList[e].courseTableList.length;r++)if(this.viewList[e].courseTableList[r].subject_name==t.subject_name)return void this.messageNotifier("error","","Selected subject already added!");let s=this.topicsName.join(", "),i={};i.total_marks=this.viewList[e].coursetableAdder.total_marks,i.class_schedule_id="0";let n=this.getSubjectName(this.viewList[e].subjectList,this.viewList[e].coursetableAdder.batch_id);i.subject_name=n.subject_name,i.batch_id=this.viewList[e].coursetableAdder.batch_id,i.otherData=n,i.topicName=s,i.topics_covered=this.checkedKeys,i.class_desc=this.viewList[e].coursetableAdder.exam_desc,i.room_no=this.viewList[e].coursetableAdder.room_no,this.viewList[e].courseTableList.push(i),this.viewList[e].courseModelAdder.total_marks+=this.viewList[e].coursetableAdder.total_marks,this.viewList[e].coursetableAdder={batch_id:-1,total_marks:0},this.topicLinkColor=!1,this.changeColor=!1}getSubjectName(e,t){for(let s=0;s<e.length;s++)if(e[s].batch_id==t)return e[s]}deleteSubject(e){for(let t=0;t<this.newExamSubjectData.length;t++)this.newExamSubjectData[t].subject_id==e&&this.newExamSubjectData.splice(t,1);this.messageNotifier("success","Success","Scheduled exam deleted successfully")}deleteFromCourse(e,t,s){if(1==this.viewList[s].courseTableList.length)return void this.messageNotifier("error","","Subject can't be deleted from the scheduled exam since only one subject is left!");this.viewList[s].courseTableList.splice(t,1),this.messageNotifier("success","Success","Scheduled exam deleted successfully");let i=0;for(let n=0;n<this.viewList[s].courseTableList.length;n++)i+=this.viewList[s].courseTableList[n].total_marks;this.viewList[s].courseModelAdder.total_marks=i}editFromCourse(e,t,s){let i,n;""!==this.selectedRow&&(this.edit_subject_id?(document.getElementById(("row"+this.selectedRow).toString()).classList.add("displayComp"),document.getElementById(("row"+this.selectedRow).toString()).classList.remove("editComp")):(document.getElementById(("row_already"+this.selectedRow).toString()).classList.add("displayComp"),document.getElementById(("row_already"+this.selectedRow).toString()).classList.remove("editComp"))),this.selectedRow=t+"_"+s,document.getElementById(("row_already"+t+"_"+s).toString()).classList.remove("displayComp"),document.getElementById(("row_already"+t+"_"+s).toString()).classList.add("editComp"),i=e.otherData?e.otherData.subject_id:e.subject_id,this.row_edit_subject_id=i,this.row_edit_subject_name=e.subject_name,this.row_edit_exam_marks=e.total_marks,this.row_edit_subject_topics=e.topicName,this.row_edit_subject_topicId=e.topics_covered,this.row_edit_exam_desc=e.class_desc,this.row_edit_exam_room_no=e.room_no,null!=e.topics_covered&&(n=e.topics_covered.includes("|")?e.topics_covered.replace("|",","):e.topics_covered,this.checkedKeys=n,this.topicsName=e.topicName)}updateEditedSubject(e,t,s){if(""==this.row_edit_exam_marks||null==this.row_edit_exam_marks)return void this.messageNotifier("error","","Please Provide Marks");let i="";this.viewList[s].subjectList.forEach(e=>{this.row_edit_subject_id==e.subject_id&&(i=e.subject_name)});let n=this.topicsName,r=this.row_edit_subject_topicId;if(Array.isArray(this.row_edit_subject_topicId)){r=this.row_edit_subject_topicId.join("|").replace(/,/g,"|")}this.viewList[s].courseTableList[t].subject_id=this.row_edit_subject_id,this.viewList[s].courseTableList[t].subject_name=i,this.viewList[s].courseTableList[t].total_marks=this.row_edit_exam_marks,this.viewList[s].courseTableList[t].topicName=n,this.viewList[s].courseTableList[t].topics_covered=r,this.viewList[s].courseTableList[t].class_desc=this.row_edit_exam_desc,this.viewList[s].courseTableList[t].room_no=this.row_edit_exam_room_no,this.row_edit_subject_id="",this.row_edit_subject_name="",this.row_edit_exam_marks="",this.row_edit_subject_topics="",this.row_edit_subject_topicId=[],this.row_edit_exam_desc="",this.row_edit_exam_room_no="";let a=0;for(let o=0;o<this.viewList[s].courseTableList.length;o++)a+=this.viewList[s].courseTableList[o].total_marks;this.viewList[s].courseModelAdder.total_marks=a,this.checkedKeys=[],this.topicsName=[],document.getElementById(("row_already"+t+"_"+s).toString()).classList.remove("editComp"),document.getElementById(("row_already"+t+"_"+s).toString()).classList.add("displayComp"),this.selectedRow=""}saveExamScheduleCourse(){this.multiClickDisabled=!0,this.auth.showLoader();let e=this.makeDataJsonToSendServer();if(0==e||null==e)return this.auth.hideLoader(),void(this.multiClickDisabled=!1);if(e.coursesList.length>0){let t=!1;e.coursesList.forEach((s,i)=>{s?s.courseClassSchdList.length?t=!0:(s.exam_start_time=null,s.exam_end_time=null):e.coursesList.splice(i,1)}),t&&this.apiService.updateExamSch(e).subscribe(e=>{this.auth.hideLoader(),200==e.statusCode?(this.messageNotifier("success","Success","Exam scheduled successfully"),this.clearAllField(),this.getExamSchedule()):this.messageNotifier("error","",e.message)},e=>{this.auth.hideLoader(),this.multiClickDisabled=!1,console.log(e),this.messageNotifier("error","",e.error.message)})}else this.multiClickDisabled=!1,this.auth.hideLoader(),this.messageNotifier("error","","Required fields not mentioned!")}makeDataJsonToSendServer(){let e=[],t={},s=0;t.master_course=this.courseData.master_course,t.requested_date=o(this.courseData.requested_date).format("YYYY-MM-DD"),t.coursesList=[];let i=!1;for(let n=0;n<this.viewList.length;n++)this.viewList[n].courseTableList.length>0&&(i=!0);if(i)for(let n=0;n<this.viewList.length;n++){let i={};i.course_id=this.viewList[n].selectedCourseList.course_id,i.course_exam_schedule_id=this.viewList[n].selectedCourseList.course_exam_schedule_id;let r=this.validateTime(this.viewList[n].courseModelAdder.start_time,this.viewList[n].courseModelAdder.end_time);if(0==r)return;let a=this.createTimeInFormat(this.viewList[n].courseModelAdder.start_time.hour,this.viewList[n].courseModelAdder.start_time.minute,""),o=this.createTimeInFormat(this.viewList[n].courseModelAdder.end_time.hour,this.viewList[n].courseModelAdder.end_time.minute,"");i.exam_start_time=a,i.exam_end_time=o,i.courseClassSchdList=[];for(let e=0;e<this.viewList[n].courseTableList.length;e++){let t={};if(null==this.viewList[n].courseTableList[e].total_marks)return this.messageNotifier("error","","please enter total marks"),!1;let c=this.viewList[n].courseTableList[e].topics_covered;t.batch_id=this.viewList[n].courseTableList[e].batch_id.toString(),t.start_time=a,t.end_time=o,t.class_desc=this.viewList[n].courseTableList[e].class_desc,t.duration=r,t.total_marks=this.viewList[n].courseTableList[e].total_marks.toString(),c&&c.includes(",")?t.topics_covered=c.replace(/,/g,"|"):t.topics_covered="string"!=typeof c?c?0==c.length?"":c.join("|"):"":c,t.room_no=this.viewList[n].courseTableList[e].room_no,t.class_schedule_id=this.viewList[n].courseTableList[e].class_schedule_id.toString(),this.schoolModel&&(t.exam_type_id=this.viewList[n].courseTableList[e].exam_type_id,t.is_optional_subject=this.viewList[n].courseTableList[e].is_optional_subject),s+=Number(this.viewList[n].courseTableList[e].total_marks),i.courseClassSchdList.push(t)}if(s!=this.viewList[n].courseModelAdder.total_marks)return this.messageNotifier("error","","Please check total marks provided"),!1;s=0,e.push(i),0==this.newExamSubjectData.length&&t.coursesList.push(i)}if(this.newExamSubjectData.length>0){let n={course_id:"",course_exam_schedule_id:"-1"};this.viewList.length>0&&(n.course_id=this.viewList[0].selectedCourseList.course_id);let r=this.validateTime2();if(0==r)return;let a=this.createTimeInFormat(this.newExamData.startTimeHrs,this.newExamData.startTimeMins,""),o=this.createTimeInFormat(this.newExamData.endTimeHrs,this.newExamData.endTimeMins,"");if(n.exam_start_time=a,n.exam_end_time=o,n.courseClassSchdList=[],this.newExamSubjectData.length>0)for(let e=0;e<this.newExamSubjectData.length;e++){let t={},i="";for(let s=0;s<this.subjectListData[0].length;s++)this.newExamSubjectData[e].subject_id==this.subjectListData[0][s].subject_id&&(i=this.subjectListData[0][s].batch_id);t.batch_id=i.toString(),t.start_time=a,t.end_time=o,t.class_desc=this.newExamSubjectData[e].exam_desc,t.duration=r,t.topics_covered=this.newExamSubjectData[e].topicsId.join("|"),t.total_marks=this.newExamSubjectData[e].exam_marks.toString(),t.room_no=this.newExamSubjectData[e].exam_room_no,t.class_schedule_id="0",this.schoolModel&&(t.exam_type_id=this.newExamSubjectData[e].exam_type_id,t.is_optional_subject=this.newExamSubjectData[e].is_optional_subject),s+=Number(this.newExamSubjectData[e].exam_marks.toString()),n.courseClassSchdList.push(t)}if(s=0,t.coursesList.push(n),i)for(let s=0;s<e.length;s++){let i=!1;console.log(e[s]),this.examScheduleData.coursesList.forEach((t,n)=>{t.course_exam_schedule_id==e[s].course_exam_schedule_id&&(i=!0)}),i&&e[s]&&0!=e[s].courseClassSchdList.length&&t.coursesList.push(e[s])}}if(this.examScheduleData.coursesList.length>0){let s=0;for(let i=0;i<this.examScheduleData.coursesList.length;i++)if(this.examScheduleData.coursesList[i].course_id!=this.courseData.course_id){let e={},s=null,n=null;if(e.course_id=this.examScheduleData.coursesList[i].course_id.toString(),e.courseClassSchdList=[],e.course_exam_schedule_id=0,null!=this.examScheduleData.coursesList[i].courseClassSchdList){let t=this.examScheduleData.coursesList[i].courseClassSchdList;if(t.length>0){for(let i=0;i<t.length;i++){let r={};s=t[i].start_time,n=t[i].end_time,r.batch_id=t[i].batch_id.toString(),r.start_time=t[i].start_time,r.end_time=t[i].end_time,r.class_desc=t[i].class_desc,r.duration=t[i].duration,r.total_marks=t[i].total_marks.toString(),r.room_no=t[i].room_no,r.class_schedule_id=t[i].class_schedule_id.toString(),e.courseClassSchdList.push(r)}e.course_exam_schedule_id=this.examScheduleData.coursesList[i].course_exam_schedule_id.toString()}}e.exam_start_time=s,e.exam_end_time=n,t.coursesList.push(e)}else if(this.examScheduleData.coursesList[i].course_id==this.courseData.course_id&&this.examScheduleData.coursesList[i]&&null==this.examScheduleData.coursesList[i].courseClassSchdList&&0!=this.examScheduleData.coursesList[i].course_exam_schedule_id){if(t.coursesList[i]&&this.examScheduleData.coursesList[i])t.coursesList[s].course_exam_schedule_id=this.examScheduleData.coursesList[i].course_exam_schedule_id,s++;else if(this.examScheduleData.coursesList[i]){let e={course_id:this.examScheduleData.coursesList[i].course_id,courseClassSchdList:[],exam_start_time:null,exam_end_time:null,course_exam_schedule_id:this.examScheduleData.coursesList[i].course_exam_schedule_id};t.coursesList.push(e)}}else if(this.examScheduleData.coursesList[i].course_id==this.courseData.course_id&&this.examScheduleData.coursesList[i]&&this.examScheduleData.coursesList[i].courseClassSchdList){let s=!0;t.coursesList.forEach(e=>{e.course_exam_schedule_id==this.examScheduleData.coursesList[i].course_exam_schedule_id&&(s=!1)}),s&&e[i]&&t.coursesList.push(e[i])}}return t}cancelExamCourse(e,t,s){this.cancelExamPopUp=!0,this.cancelExamData=this.viewList[s].courseTableList[t]}cancelCourseExam(){if(""==this.cancelPopUpData.reason.trim())return void this.messageNotifier("error","","Please Provide Cancellation Reason");let e="";if(e=this.cancelPopUpData.notify?"Y":"N",!this.auth.isRippleLoad.getValue()){this.auth.showLoader();let t={batch_id:this.cancelExamData.batch_id,exam_freq:"OTHER",cancelSchd:[{schd_id:this.cancelExamData.class_schedule_id,exam_desc:this.cancelPopUpData.reason,is_notified:e}]};this.apiService.cancelExamSchedule(t).subscribe(e=>{this.auth.hideLoader(),this.messageNotifier("success","Successfully Cancelled","Scheduled exam cancelled successfully"),this.closeCancelExamPopUp(),this.getExamSchedule()},e=>{this.auth.hideLoader(),this.messageNotifier("error","",e.error.message)})}}cancelExamForFullCourse(e,t){this.cancelExamPopUp=!0,this.cancelExamData=e,this.jsonVar.cancelCourseLevel=!0}cancelCourseLevelExam(){if(""==this.cancelPopUpData.reason.trim())return void this.messageNotifier("error","","Please Provide Cancellation Reason");let e="";if(e=this.cancelPopUpData.notify?"Y":"N",!this.auth.isRippleLoad.getValue()){this.auth.showLoader();let t={cancel_reason:this.cancelPopUpData.reason,course_exam_schedule_id:this.cancelExamData.selectedCourseList.course_exam_schedule_id,course_id:this.courseData.course_id,is_cancel_notify:e,requested_date:o(this.courseData.requested_date).format("YYYY-MM-DD")};this.apiService.cancelExamScheduleCourse(t).subscribe(e=>{this.auth.hideLoader(),this.messageNotifier("success","Successfully Cancelled","Scheduled exam cancelled successfully"),this.closeCancelExamPopUp(),this.getExamSchedule()},e=>{this.auth.hideLoader(),this.messageNotifier("error","",e.error.message)})}}onChanged(e){this.selectedType=e.value}sendReminderForCourse(e,t){if(confirm("Are you sure, You want to notify?")){let t={course_exam_schedule_id:e.selectedCourseList.course_exam_schedule_id,course_id:this.courseData.course_id,requested_date:o(this.courseData.requested_date).format("YYYY-MM-DD")};this.apiService.sendReminder(t).subscribe(e=>{this.messageNotifier("success","Reminder Sent","Notification sent successfully")},e=>{this.messageNotifier("error","","SMS notification can't be sent due to any of the following reasons: SMS setting is not enabled for the institute. SMS quota is not sufficient for the institute. No student(s) assigned in the course to notify")})}}deleteWholeCourse(e,t){this.viewList.splice(t,1)}validateTime(e,t){let s=o(this.createTimeInFormat(e.hour,e.minute,"comp"),"h:mma"),i=o(this.createTimeInFormat(t.hour,t.minute,"comp"),"h:mma");if(s.isBefore(i)){return i.diff(s,"minutes")}return this.messageNotifier("error","","Please enter correct start time and end time"),!1}validateTime2(){let e=o(this.createTimeInFormat(this.newExamData.startTimeHrs,this.newExamData.startTimeMins,"comp"),"h:mma"),t=o(this.createTimeInFormat(this.newExamData.endTimeHrs,this.newExamData.endTimeMins,"comp"),"h:mma");if(e.isBefore(t)){return t.diff(e,"minutes")}return this.messageNotifier("error","","Please enter correct start time and end time"),!1}breakTimeFormat(e){let t={};return t.hour=e.split(":")[0]+" "+e.split(":")[1].split(" ")[1],t.minute=e.split(":")[1].split(" ")[0],t}createTimeInFormat(e,t,s){let i=e.split(" ");if("comp"==s){return i[0]+":"+t+i[1]}return i[0]+":"+t+" "+i[1]}messageNotifier(e,t,s){let i={type:e,title:t,body:s};this.toastCtrl.popToast(i)}checkInstituteType(){this.auth.institute_type.subscribe(e=>{this.isLangInstitute="LANG"==e})}fetchInstituteExamTypesv2(){this.commonApiCall.fetchInstituteExamTypes(sessionStorage.getItem("institute_id")).subscribe(e=>{this.examTypeList=e.result},e=>{this.msgSrvc.showErrorMessage(this.msgSrvc.toastTypes.error,"",e.error.message)})}fetchInstituteExamTypes(){this.commonApiCall.examTypeList.subscribe(e=>{this.examTypeList=e})}};return e.ctorParameters=()=>[{type:h.a},{type:l.a},{type:d.a},{type:p.a},{type:i.ChangeDetectorRef},{type:u.a},{type:m.a},{type:b.a}],e=g([Object(i.Component)({selector:"app-course-exam",template:f(s("FIwe")).default,styles:[f(s("2QUe")).default]}),x("design:paramtypes",[h.a,l.a,d.a,p.a,i.ChangeDetectorRef,u.a,m.a,b.a])],e),e})(),v=(()=>{let e=class{transform(e){return""!=e&&null!=e&&null!=e?o(e).format("DD-MM-YYYY"):e}};return e=g([Object(i.Pipe)({name:"dateMonthYear"})],e),e})();var w=s("tyNb"),k=function(e,t,s,i){var n,r=arguments.length,a=r<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,s):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,s,i);else for(var o=e.length-1;o>=0;o--)(n=e[o])&&(a=(r<3?n(a):r>3?n(t,s,a):n(t,s))||a);return r>3&&a&&Object.defineProperty(t,s,a),a};let L=(()=>{let e=class{};return e=k([Object(i.NgModule)({imports:[w.RouterModule.forChild([{path:"",component:_,pathMatch:"prefix"}])],exports:[w.RouterModule]})],e),e})();var S=s("eGaT"),y=function(e,t,s,i){var n,r=arguments.length,a=r<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,s):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,s,i);else for(var o=e.length-1;o>=0;o--)(n=e[o])&&(a=(r<3?n(a):r>3?n(t,s,a):n(t,s))||a);return r>3&&a&&Object.defineProperty(t,s,a),a};let D=(()=>{let e=class{};return e=y([Object(i.NgModule)({imports:[S.a,r.FormsModule,r.ReactiveFormsModule,a.CommonModule,n.a,L],exports:[],declarations:[_,v],providers:[h.a,p.a]})],e),e})()}}]);